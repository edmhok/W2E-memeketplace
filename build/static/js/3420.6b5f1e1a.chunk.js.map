{"version":3,"file":"static/js/3420.6b5f1e1a.chunk.js","mappings":"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","sources":["components/CurrencyAvatar/index.tsx","components/PercentageSlider/index.tsx","components/swap/Header.tsx","components/swap/LiquidityInfo.tsx","components/swap/PositionRangeState.tsx","hooks/swap/v2/usePositionFees.ts","hooks/useDebouncedChangeHandler.ts","store/swapv2/cache/hooks.ts","store/swapv2/burn/hooks.ts","views/swap-v2/liquidity/DecreaseLiquidity/Unclaimed.tsx","views/swap-v2/liquidity/DecreaseLiquidity/Input.tsx","views/swap-v2/liquidity/DecreaseLiquidity/Confirm.tsx","views/swap-v2/liquidity/DecreaseLiquidity/index.tsx","../packages/swap-sdk/src/utils/getPriceOrderingFromPositionForUI.ts","../packages/swap-sdk/src/utils/invert.ts"],"sourcesContent":["import { Avatar } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Token } from \"@w2e/swap-sdk\";\n\nconst useStyles = ({ borderColor, size }: { borderColor: string; size?: string | undefined }) =>\n  makeStyles(() => {\n    return {\n      avatar: {\n        width: size || \"24px\",\n        height: size || \"24px\",\n        border: `1px solid ${borderColor}`,\n      },\n    };\n  });\n\nexport interface CurrencyAvatarProps {\n  currency: Token | undefined | null;\n  borderColor?: string;\n  bgColor?: string;\n  className?: string;\n  size?: string;\n}\n\nexport default function CurrencyAvatar({\n  currency,\n  borderColor = \"#ffffff\",\n  bgColor = \"#97a4ef\",\n  className,\n  size,\n}: CurrencyAvatarProps) {\n  const classes = useStyles({ borderColor, size })();\n\n  return (\n    <Avatar className={`${classes.avatar} ${className || \"\"}`} sx={{ bgcolor: bgColor }} src={currency?.logo}>\n      &nbsp;\n    </Avatar>\n  );\n}\n","import { Slider, Tooltip, tooltipClasses, SliderProps } from \"@mui/material\";\nimport { styled, makeStyles } from \"@mui/styles\";\nimport { isDarkTheme } from \"utils\";\nimport { Theme } from \"@mui/material/styles\";\n\nconst marks = [{ value: 0 }, { value: 25 }, { value: 50 }, { value: 75 }, { value: 100 }];\n\nconst useStyle = makeStyles((theme: Theme) => {\n  return {\n    root: {\n      color: theme.colors.secondaryMain,\n      \"& .MuiSlider-rail\": {\n        height: \"4px\",\n        backgroundColor: isDarkTheme(theme) ? theme.palette.background.level4 : \"#fff\",\n      },\n      \"& .MuiSlider-thumb\": {\n        // marginLeft: \"0px\",\n        width: \"16px\",\n        height: \"16px\",\n        border: \"2px solid #fff\",\n        marginLeft: \"5px\",\n      },\n      \"& .MuiSlider-mark\": {\n        width: \"12px\",\n        height: \"12px\",\n        borderRadius: \"50%\",\n        backgroundColor: theme.palette.background.level4,\n        top: \"50%\",\n        transform: \"translate(0, -50%)\",\n        opacity: 1,\n        \"&.MuiSlider-markActive\": {\n          backgroundColor: theme.colors.secondaryMain,\n        },\n      },\n    },\n    tooltip: {},\n  };\n});\n\nconst LightTooltip = styled(({ className, ...props }) => <Tooltip {...props} classes={{ popper: className }} />)(\n  ({ theme }: { theme: Theme }) => ({\n    [`& .${tooltipClasses.tooltip}`]: {\n      backgroundColor: theme.colors.secondaryMain,\n      color: \"#fff\",\n      fontWeight: 700,\n    },\n    \"& .MuiTooltip-arrow\": {\n      color: theme.colors.secondaryMain,\n    },\n  }),\n);\n\nconst ValueLabelComponent = (props: { children: React.ReactChild; value: string | number }) => {\n  const { children, value } = props;\n  const classes = useStyle();\n\n  return (\n    <LightTooltip placement=\"top\" arrow title={`${value}%`} className={classes.tooltip}>\n      {children}\n    </LightTooltip>\n  );\n};\n\nexport default function PercentageSlider(props: SliderProps) {\n  const classes = useStyle();\n\n  return (\n    <Slider\n      {...props}\n      className={classes.root}\n      marks={marks}\n      valueLabelDisplay=\"auto\"\n      components={{\n        ValueLabel: ValueLabelComponent,\n      }}\n    />\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Grid, Typography } from \"@mui/material\";\nimport { ArrowBack as ArrowBackIcon } from \"@mui/icons-material\";\n// import SwapSettingIcon from \"components/swap/SettingIcon\";\n\nexport interface HeaderTabProps {\n  showArrow?: boolean;\n  showUserSetting?: boolean;\n  title: React.ReactChild;\n  slippageType?: string;\n  onBack?: () => void;\n}\n\nexport default function SwapHeader({ showArrow = false, title, onBack }: HeaderTabProps) {\n  const history = useHistory();\n\n  const handleBack = useCallback(() => {\n    if (onBack) {\n      onBack();\n    } else {\n      history.goBack();\n    }\n  }, [history, onBack]);\n\n  return (\n    <Grid container>\n      <Grid item xs={2} container justifyContent=\"flex-start\">\n        {showArrow && <ArrowBackIcon sx={{ cursor: \"pointer\" }} onClick={handleBack} />}\n      </Grid>\n      <Grid item xs container justifyContent=\"center\">\n        <Typography color=\"textPrimary\" variant=\"h3\">\n          {title}\n        </Typography>\n      </Grid>\n      <Grid\n        item\n        xs={2}\n        container\n        justifyContent=\"flex-start\"\n        sx={{\n          position: \"relative\",\n        }}\n      >\n        {/* {showUserSetting && <SwapSettingIcon type={slippageType} />} */}\n      </Grid>\n    </Grid>\n  );\n}\n","import { useState, useMemo } from \"react\";\nimport { Typography, Grid, Box } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { formatTickPrice } from \"utils/swap/formatTickPrice\";\nimport useIsTickAtLimit from \"hooks/swap/useIsTickAtLimit\";\nimport { Bound } from \"constants/swap\";\nimport { Position, getPriceOrderingFromPositionForUI, useInverter } from \"@w2e/swap-sdk\";\nimport { SyncAlt as SyncAltIcon } from \"@mui/icons-material\";\nimport { Trans } from \"@lingui/macro\";\nimport { Theme, createTheme } from \"@mui/material/styles\";\nimport { TokenImage } from \"components/Image/Token\";\nimport PositionRangeState from \"./PositionRangeState\";\n\nexport const customizeTheme = createTheme({\n  breakpoints: {\n    values: {\n      sm: 680,\n    },\n  },\n});\n\nconst useStyle = makeStyles((theme: Theme) => ({\n  NFTBox: {\n    marginRight: \"12px\",\n    borderRadius: \"12px\",\n    background: theme.palette.background.level2,\n    width: \"300px\",\n    height: \"332px\",\n\n    [customizeTheme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      height: \"332px\",\n      marginBottom: \"20px\",\n      marginRight: \"0px\",\n    },\n  },\n  NFTWrapper: {\n    width: \"300px\",\n    height: \"300px\",\n    position: \"relative\",\n  },\n  currentPrice: {\n    height: \"52px\",\n    borderRadius: \"12px\",\n    border: `1px solid ${theme.palette.background.level3}`,\n    background: theme.palette.background.level2,\n    padding: \"0 20px\",\n  },\n  rangeBox: {\n    height: \"112px\",\n    borderRadius: \"12px\",\n    border: `1px solid ${theme.palette.background.level3}`,\n    background: theme.palette.background.level2,\n  },\n}));\n\nexport interface LiquidityInfoProps {\n  position: Position | undefined;\n  positionId: string | number | bigint | undefined;\n  version?: \"v2\" | \"v3\";\n}\n\nfunction hasLiquidity(position: Position | undefined) {\n  return position?.liquidity?.toString() !== \"0\";\n}\n\nexport default function LiquidityInfo({ position }: LiquidityInfoProps) {\n  const classes = useStyle();\n\n  const { pool, tickLower, tickUpper } = position || {};\n  const { token0, token1, fee: feeAmount } = pool || {};\n\n  const pricesFromPosition = getPriceOrderingFromPositionForUI(position);\n  const [manuallyInverted, setManuallyInverted] = useState(false);\n\n  const { priceLower, priceUpper, base } = useInverter({\n    priceLower: pricesFromPosition.priceLower,\n    priceUpper: pricesFromPosition.priceUpper,\n    quote: pricesFromPosition.quote,\n    base: pricesFromPosition.base,\n    invert: manuallyInverted,\n  });\n\n  const inverted = token1 ? base?.equals(token1) : undefined;\n\n  const currencyQuote = inverted ? token0 : token1;\n  const currencyBase = inverted ? token1 : token0;\n\n  const _tickAtLimit = useIsTickAtLimit(feeAmount, tickLower, tickUpper);\n\n  const tickAtLimit = useMemo(() => {\n    if (!inverted) return _tickAtLimit;\n\n    return {\n      [Bound.LOWER]: _tickAtLimit[Bound.UPPER] ? true : undefined,\n      [Bound.UPPER]: _tickAtLimit[Bound.LOWER] ? true : undefined,\n    };\n  }, [_tickAtLimit, inverted]);\n\n  const pairName = useMemo(() => {\n    return !!currencyQuote && !!currencyBase ? `${currencyQuote?.symbol} per ${currencyBase?.symbol}` : \"--\";\n  }, [currencyQuote, currencyBase]);\n\n  const outOfRange =\n    pool && (tickUpper || tickUpper === 0) && (tickLower || tickLower === 0)\n      ? pool.tickCurrent < tickLower || pool.tickCurrent >= tickUpper\n      : false;\n\n  const closed = !hasLiquidity(position);\n\n  return (\n    <Grid container flexDirection=\"column\">\n      <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n        <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n          <TokenImage logo={token0?.logo} tokenId={token0?.address} />\n          <Box sx={{ width: \"32px\", height: \"32px\", position: \"relative\", left: \"-10px\" }}>\n            <TokenImage logo={token1?.logo} tokenId={token1?.address} />\n          </Box>\n\n          <Typography\n            sx={{\n              fontSize: \"28px\",\n              color: \"#fff\",\n              fontWeight: 500,\n              \"@media(max-width: 640px)\": {\n                fontSize: \"18px\",\n              },\n            }}\n          >\n            {token0?.symbol}\n          </Typography>\n          <Typography\n            sx={{\n              fontSize: \"24px\",\n              color: \"#fff\",\n              fontWeight: 500,\n              margin: \"0 10px\",\n              \"@media(max-width: 640px)\": {\n                fontSize: \"16px\",\n              },\n            }}\n          >\n            /\n          </Typography>\n          <Typography\n            sx={{\n              fontSize: \"28px\",\n              color: \"#fff\",\n              fontWeight: 500,\n              \"@media(max-width: 640px)\": {\n                fontSize: \"18px\",\n              },\n            }}\n          >\n            {token1?.symbol}\n          </Typography>\n        </Box>\n\n        <PositionRangeState outOfRange={outOfRange} closed={closed} />\n      </Grid>\n\n      <Grid item xs sx={{ margin: \"24px 0 0 0\" }}>\n        <Grid container alignItems=\"center\" className={classes.currentPrice}>\n          <Typography color=\"text.primary\">\n            <Trans>Current Price</Trans>\n          </Typography>\n          <Grid item xs>\n            <Grid container alignItems=\"center\" justifyContent=\"flex-end\">\n              <Typography\n                fontWeight=\"500\"\n                color=\"text.primary\"\n                sx={{ maxWidth: \"190px\", whiteSpace: \"nowrap\", textOverflow: \"ellipsis\", overflow: \"hidden\" }}\n              >\n                {!!token1 && !!token0\n                  ? inverted\n                    ? pool?.priceOf(token1)\n                      ? `${pool?.priceOf(token1).toSignificant(6)}`\n                      : \"--\"\n                    : pool?.priceOf(token0)\n                      ? `${pool?.priceOf(token0).toSignificant(6)}`\n                      : \"--\"\n                  : \"--\"}\n              </Typography>\n              <SyncAltIcon\n                sx={{ fontSize: \"1rem\", marginLeft: \"6px\", cursor: \"pointer\" }}\n                onClick={() => setManuallyInverted(!manuallyInverted)}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Box mt=\"20px\">\n          <Grid container alignItems=\"center\">\n            <Grid item xs>\n              <Typography color=\"text.primary\" fontWeight=\"700\">\n                Price Range\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <Box sx={{ display: \"flex\", gap: \"0 24px\" }}>\n            <Grid container justifyContent=\"center\" alignItems=\"center\" mt=\"10px\" className={classes.rangeBox}>\n              <Box>\n                <Grid container justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n                  <Typography fontSize=\"12px\" fontWeight=\"500\">\n                    Min Price\n                  </Typography>\n                  <Typography fontSize=\"20px\" fontWeight=\"700\" color=\"text.primary\" sx={{ margin: \"6px 0\" }}>\n                    {formatTickPrice(priceLower, tickAtLimit, Bound.LOWER)}\n                  </Typography>\n                  <Typography fontSize=\"12px\" fontWeight=\"500\">\n                    {pairName}\n                  </Typography>\n                </Grid>\n              </Box>\n            </Grid>\n\n            <Grid container justifyContent=\"center\" alignItems=\"center\" mt=\"8px\" className={classes.rangeBox}>\n              <Box>\n                <Grid container justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n                  <Typography fontSize=\"12px\" fontWeight=\"500\">\n                    Max Price\n                  </Typography>\n                  <Typography fontSize=\"20px\" fontWeight=\"700\" color=\"text.primary\" sx={{ margin: \"6px 0\" }}>\n                    {formatTickPrice(priceUpper, tickAtLimit, Bound.UPPER)}\n                  </Typography>\n                  <Typography fontSize=\"12px\" fontWeight=\"500\">\n                    {pairName}\n                  </Typography>\n                </Grid>\n              </Box>\n            </Grid>\n          </Box>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n","import { Box, Typography, SvgIcon } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { Trans } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\n\nconst useStyle = makeStyles((theme: Theme) => {\n  return {\n    wrapper: {\n      display: \"flex\",\n      alignItems: \"center\",\n      height: \"24px\",\n      padding: \"0 9px\",\n      borderRadius: \"8px\",\n\n      \"& .MuiTypography-root\": {\n        fontSize: \"12px\",\n        fontWeight: 500,\n      },\n\n      \"&.inRange\": {\n        background: theme.colors.darkPrimary400,\n      },\n\n      \"&.closed\": {\n        background: theme.colors.darkPrimary400,\n      },\n\n      \"&.outOfRange\": {\n        background: \"#FFC107\",\n        \"& .MuiTypography-root\": {\n          color: theme.colors.darkLevel1,\n          marginLeft: \"3px\",\n        },\n      },\n    },\n  };\n});\n\nfunction Marker(props: any) {\n  return (\n    <SvgIcon width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" {...props}>\n      <path\n        d=\"M5.5 3.5H6.5V4.5H5.5V3.5ZM5.5 5.5H6.5V8.5H5.5V5.5ZM6 1C3.24 1 1 3.24 1 6C1 8.76 3.24 11 6 11C8.76 11 11 8.76 11 6C11 3.24 8.76 1 6 1ZM6 10C3.795 10 2 8.205 2 6C2 3.795 3.795 2 6 2C8.205 2 10 3.795 10 6C10 8.205 8.205 10 6 10Z\"\n        fill={props.color ? props.color : \"#111936\"}\n      />\n    </SvgIcon>\n  );\n}\n\nfunction Closed() {\n  const classes = useStyle();\n\n  return (\n    <Box component=\"span\" className={`${classes.wrapper} closed`}>\n      <Marker fontSize=\"12px\" color=\"#fff\" />\n\n      <Typography color=\"#ffffff\" sx={{ marginLeft: \"3px\" }}>\n        <Trans>Closed</Trans>\n      </Typography>\n    </Box>\n  );\n}\n\nfunction OutOfRange() {\n  const classes = useStyle();\n\n  return (\n    <Box className={`${classes.wrapper} outOfRange`}>\n      <Marker fontSize=\"12px\" />\n\n      <Typography>\n        <Trans>Out of range</Trans>\n      </Typography>\n    </Box>\n  );\n}\n\nfunction InRange() {\n  const classes = useStyle();\n\n  return (\n    <Box className={`${classes.wrapper} inRange`}>\n      <Box\n        component=\"span\"\n        sx={{ background: \"#54C081\", width: \"8px\", height: \"8px\", borderRadius: \"50%\", marginRight: \"8px\" }}\n      />\n      <Typography color=\"#ffffff\">\n        <Trans>In range</Trans>\n      </Typography>\n    </Box>\n  );\n}\n\nexport interface PositionRangeStateProps {\n  outOfRange?: boolean | undefined;\n  closed?: boolean | undefined;\n}\n\nexport default function PositionRangeState({ outOfRange, closed }: PositionRangeStateProps) {\n  return closed ? <Closed /> : outOfRange ? <OutOfRange /> : <InRange />;\n}\n","import { useMemo } from \"react\";\nimport { usePositionFeesCall } from \"hooks/swap/v2/useSwapCalls\";\n\nexport function usePositionFees(positionId: bigint | string | number | undefined, invalid: boolean, reload?: boolean) {\n  const { result } = usePositionFeesCall(positionId, invalid, reload);\n\n  return useMemo(() => {\n    if (!result)\n      return {\n        amount0: undefined,\n        amount1: undefined,\n      };\n\n    return {\n      amount0: result.amount0,\n      amount1: result.amount1,\n    };\n  }, [result]);\n}\n","import { useCallback, useEffect, useRef, useState } from \"react\";\n\nexport default function useDebouncedChangeHandler<T>(\n  value: T,\n  onChange: (newValue: T) => void,\n  debouncedMs = 100,\n): [T, (value: T) => void] {\n  const [inner, setInner] = useState<T>(() => value);\n  const timer = useRef<ReturnType<typeof setTimeout>>();\n\n  const onChangeInner = useCallback(\n    (newValue) => {\n      setInner(newValue);\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n      timer.current = setTimeout(() => {\n        onChange(newValue);\n        timer.current = undefined;\n      }, debouncedMs);\n    },\n    [debouncedMs, onChange],\n  );\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current);\n      timer.current = undefined;\n    }\n    setInner(value);\n  }, [value]);\n\n  return [inner, onChangeInner];\n}\n","import { useCallback } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"store/hooks\";\nimport { updateUserSlippage } from \"./actions\";\n\nexport function useIsExpertMode() {\n  return useAppSelector((state) => state.swapV2Cache.userExpertMode);\n}\n\nexport function useIsSingleHop() {\n  return useAppSelector((state) => state.swapV2Cache.userSingleHop);\n}\n\nexport function useUserSlippage() {\n  return useAppSelector((state) => state.swapV2Cache.userSlippage);\n}\n\nexport function useUserTransactionsDeadline() {\n  return useAppSelector((state) => state.swapV2Cache.userTransactionsDeadline);\n}\n\nexport function useSlippageManager(type: string): [number, (value: number) => void] {\n  const dispatch = useAppDispatch();\n  const userSlippage = useUserSlippage()[type];\n\n  const setUserSlippage = useCallback(\n    (value: number) => {\n      dispatch(updateUserSlippage({ type, value }));\n    },\n    [dispatch],\n  );\n\n  return [userSlippage, setUserSlippage];\n}\n","import { useAppSelector, useAppDispatch } from \"store/hooks\";\nimport { useCallback, useMemo } from \"react\";\nimport { numberToString } from \"@w2e/utils\";\nimport { Percent, CurrencyAmount, Position, Token } from \"@w2e/swap-sdk\";\nimport { BURN_FIELD } from \"constants/swap\";\nimport { tryParseAmount } from \"utils/swap\";\nimport { useToken } from \"hooks/useCurrency\";\nimport { usePool } from \"hooks/swap/v2/usePools\";\nimport { t } from \"@lingui/macro\";\nimport { PositionResult } from \"types/swapv2\";\nimport { updateTypedInput, resetBurnState } from \"./actions\";\n\nexport function useBurnState() {\n  return useAppSelector((state) => state.swapV2Burn);\n}\n\nexport function useResetBurnState() {\n  const dispatch = useAppDispatch();\n\n  return useCallback(() => {\n    dispatch(resetBurnState());\n  }, [dispatch]);\n}\n\nexport function useBurnInfo(position: PositionResult | undefined | null) {\n  const { token0: token0Address, token1: token1Address } = position || {};\n\n  const [, token0] = useToken(token0Address) ?? undefined;\n  const [, token1] = useToken(token1Address) ?? undefined;\n\n  const [poolState, pool] = usePool(\n    token0 ?? undefined,\n    token1 ?? undefined,\n    position?.fee ? Number(position.fee) : undefined,\n  );\n\n  const positionSDK = useMemo(\n    () =>\n      pool &&\n      position?.liquidity &&\n      (position?.tickLower || Number(position?.tickLower) === 0) &&\n      (position?.tickUpper || Number(position?.tickUpper) === 0)\n        ? new Position({\n            pool,\n            liquidity: numberToString(position.liquidity),\n            tickLower: Number(position.tickLower),\n            tickUpper: Number(position.tickUpper),\n          })\n        : undefined,\n    [pool, position],\n  );\n\n  const { independentField, typedValue } = useBurnState();\n\n  const [tokenA, tokenB] = [token0?.wrapped, token1?.wrapped];\n\n  const tokens: { [key in BURN_FIELD]?: Token | undefined } = {\n    [BURN_FIELD.CURRENCY_A]: tokenA,\n    [BURN_FIELD.CURRENCY_B]: tokenB,\n  };\n\n  const liquidityValues: { [key in BURN_FIELD]?: CurrencyAmount<Token> | undefined } = {\n    [BURN_FIELD.CURRENCY_A]: positionSDK?.amount0,\n    [BURN_FIELD.CURRENCY_B]: positionSDK?.amount1,\n  };\n\n  let percentToRemove = new Percent(\"0\", \"100\");\n\n  if (independentField === BURN_FIELD.LIQUIDITY_PERCENT) {\n    percentToRemove = new Percent(typedValue, \"100\");\n  } else if (tokens[independentField]) {\n    const independentAmount = tryParseAmount(typedValue, tokens[independentField]);\n    const liquidityValue = liquidityValues[independentField];\n\n    if (independentAmount && liquidityValue && !independentAmount.greaterThan(liquidityValue)) {\n      percentToRemove = new Percent(independentAmount.quotient, liquidityValue.quotient);\n    }\n  }\n\n  const discountedAmount0 = positionSDK ? percentToRemove.multiply(positionSDK.amount0.quotient).quotient : undefined;\n  const discountedAmount1 = positionSDK ? percentToRemove.multiply(positionSDK.amount1.quotient).quotient : undefined;\n\n  const parsedAmounts = {\n    [BURN_FIELD.LIQUIDITY_PERCENT]: percentToRemove,\n    [BURN_FIELD.CURRENCY_A]:\n      token0 && discountedAmount0 && percentToRemove && percentToRemove.greaterThan(\"0\")\n        ? CurrencyAmount.fromRawAmount(token0, discountedAmount0)\n        : undefined,\n    [BURN_FIELD.CURRENCY_B]:\n      token1 && discountedAmount1 && percentToRemove && percentToRemove.greaterThan(\"0\")\n        ? CurrencyAmount.fromRawAmount(token1, discountedAmount1)\n        : undefined,\n  };\n\n  const outOfRange =\n    pool && position ? pool.tickCurrent < position.tickLower || pool.tickCurrent > position.tickUpper : false;\n\n  let error: string | undefined;\n\n  if (\n    !parsedAmounts[BURN_FIELD.LIQUIDITY_PERCENT] ||\n    !parsedAmounts[BURN_FIELD.CURRENCY_A] ||\n    !parsedAmounts[BURN_FIELD.CURRENCY_B]\n  ) {\n    if (typedValue && String(typedValue) !== \"0\") {\n      error = error ?? t`Invalid value`;\n    } else {\n      error = error ?? t`Enter an amount`;\n    }\n  }\n\n  return {\n    poolState,\n    parsedAmounts,\n    error,\n    outOfRange,\n    currencyA: token0,\n    currencyB: token1,\n    position: positionSDK,\n    liquidityToRemove: percentToRemove,\n    liquidityValue0: parsedAmounts[BURN_FIELD.CURRENCY_A],\n    liquidityValue1: parsedAmounts[BURN_FIELD.CURRENCY_B],\n  };\n}\n\nexport function useBurnHandlers() {\n  const dispatch = useAppDispatch();\n\n  const onUserInput = useCallback(\n    (independentField: BURN_FIELD, typedValue: string) => {\n      dispatch(updateTypedInput({ independentField, typedValue }));\n    },\n    [dispatch],\n  );\n\n  return {\n    onUserInput,\n  };\n}\n","import { useMemo } from \"react\";\nimport { Typography, Grid, Box, Avatar } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { usePositionFees } from \"hooks/swap/v2/usePositionFees\";\nimport { numberToString, toSignificant } from \"@w2e/utils\";\nimport { CurrencyAmount, Position } from \"@w2e/swap-sdk\";\nimport { Theme } from \"@mui/material/styles\";\nimport BigNumber from \"bignumber.js\";\n\nconst useStyle = makeStyles((theme: Theme) => ({\n  wrapper: {\n    backgroundColor: theme.palette.background.level2,\n    borderRadius: `12px`,\n    border: `1px solid ${theme.palette.background.level3}`,\n    padding: \"16px 12px\",\n  },\n}));\n\nexport interface UnclaimedProps {\n  positionId: number | bigint | string | undefined;\n  invalid?: boolean;\n  position: Position | undefined;\n}\n\nexport default function Unclaimed({ position, positionId, invalid = false }: UnclaimedProps) {\n  const classes = useStyle();\n\n  const { token0, token1 } = position?.pool || {};\n  const { amount0: feeAmount0, amount1: feeAmount1 } = usePositionFees(positionId, invalid);\n\n  const currencyFeeAmount0 = useMemo(() => {\n    if (!token0 || !feeAmount0) return undefined;\n    return CurrencyAmount.fromRawAmount(token0, numberToString(feeAmount0));\n  }, [feeAmount0, token0]);\n\n  const currencyFeeAmount1 = useMemo(() => {\n    if (!token1 || !feeAmount1) return undefined;\n    return CurrencyAmount.fromRawAmount(token1, numberToString(feeAmount1));\n  }, [feeAmount1, token1]);\n\n  return (\n    <Box>\n      <Typography color=\"text.primary\">Unclaimed fees</Typography>\n      <Box mt=\"12px\" className={classes.wrapper}>\n        <Grid container alignItems=\"center\">\n          <Avatar sx={{ width: \"32px\", height: \"32px\", marginRight: \"12px\", bgcolor: \"#273155\" }} src={token0?.logo}>\n            &nbsp;\n          </Avatar>\n          <Typography color=\"text.primary\">{token0?.symbol}</Typography>\n          <Grid item xs>\n            <Typography align=\"right\" color=\"text.primary\">\n              {currencyFeeAmount0\n                ? toSignificant(new BigNumber(currencyFeeAmount0.toExact()).multipliedBy(0.8).toString(), 6)\n                : 0}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Grid mt=\"10px\" container alignItems=\"center\">\n          <Avatar sx={{ width: \"32px\", height: \"32px\", marginRight: \"12px\", bgcolor: \"#273155\" }} src={token1?.logo}>\n            &nbsp;\n          </Avatar>\n          <Typography color=\"text.primary\">{token1?.symbol}</Typography>\n          <Grid item xs>\n            <Typography align=\"right\" color=\"text.primary\">\n              {currencyFeeAmount1\n                ? toSignificant(new BigNumber(currencyFeeAmount1.toExact()).multipliedBy(0.8).toString(), 6)\n                : 0}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Grid, Box, Typography, Avatar } from \"@mui/material\";\nimport { makeStyles, useTheme } from \"@mui/styles\";\nimport { NumberTextField } from \"components/index\";\nimport { MAX_SWAP_INPUT_LENGTH } from \"constants/index\";\nimport { Trans } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Token } from \"@w2e/swap-sdk\";\n\nconst useStyle = makeStyles((theme: Theme) => {\n  return {\n    inputBox: {\n      backgroundColor: theme.palette.background.level3,\n      borderRadius: \"12px\",\n      padding: \"16px 24px 16px 12px\",\n    },\n    tokenButton: {\n      backgroundColor: theme.palette.background.level2,\n      borderRadius: \"12px\",\n      padding: \"9px 28px 9px 12px\",\n    },\n    input: {\n      \"& input\": {\n        textAlign: \"right\",\n        fontSize: \"20px\",\n        fontWeight: 700,\n        // color: theme.textPrimary,\n      },\n      \"& input::placeholder\": {\n        fontSize: \"20px\",\n        fontWeight: 700,\n      },\n    },\n  };\n});\n\nexport interface DecreaseLiquidityInputProps {\n  currency: Token | undefined;\n  value: string | number;\n  onUserInput: (value: string) => void;\n  totalAmount: React.ReactChild;\n}\n\nexport default function DecreaseLiquidityInput({\n  currency,\n  value,\n  onUserInput,\n  totalAmount,\n}: DecreaseLiquidityInputProps) {\n  const classes = useStyle();\n  const theme = useTheme() as Theme;\n\n  return (\n    <Box className={classes.inputBox}>\n      <Grid container>\n        <Box className={classes.tokenButton}>\n          <Grid item xs container alignItems=\"center\">\n            <Avatar\n              sx={{\n                ...theme.palette.avatar.bgcolor,\n                display: \"inline-block\",\n                marginRight: \"8px\",\n                width: \"24px\",\n                height: \"24px\",\n              }}\n              alt=\"\"\n              src={currency?.logo}\n            >\n              &nbsp;\n            </Avatar>\n            <Typography component=\"span\">{currency?.symbol}</Typography>\n          </Grid>\n        </Box>\n        <Grid item xs>\n          <NumberTextField\n            fullWidth\n            value={value}\n            className={classes.input}\n            placeholder=\"0.0\"\n            variant=\"standard\"\n            numericProps={{\n              thousandSeparator: true,\n              decimalScale: currency?.decimals ?? 8,\n              allowNegative: false,\n              maxLength: MAX_SWAP_INPUT_LENGTH,\n            }}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              onUserInput(e.target.value);\n            }}\n          />\n        </Grid>\n      </Grid>\n      <Box mt={1}>\n        <Typography fontSize=\"12px\">\n          <Trans>Total Amount:</Trans> {totalAmount} {currency?.symbol}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n","import { memo } from \"react\";\nimport { Box, Typography, Grid, Button } from \"@mui/material\";\nimport SwapModal from \"components/modal/swap\";\nimport CurrencyAvatar from \"components/CurrencyAvatar\";\nimport { BURN_FIELD } from \"constants/swap\";\nimport { Trans } from \"@lingui/macro\";\nimport { Token } from \"@w2e/swap-sdk\";\n\nexport default memo(\n  ({\n    open,\n    onCancel,\n    onConfirm,\n    formattedAmounts,\n    currencyA,\n    currencyB,\n  }: {\n    open: boolean;\n    onCancel: () => void;\n    onConfirm: () => void;\n    currencyA: Token | undefined;\n    currencyB: Token | undefined;\n    formattedAmounts: { [key in BURN_FIELD]?: string };\n  }) => {\n    return (\n      <SwapModal open={open} onClose={onCancel} title=\"Remove Liquidity\">\n        <>\n          <Box mt={1}>\n            <Grid container mt={1} alignItems=\"center\">\n              <Grid item xs container alignItems=\"center\">\n                <Grid item mr={1}>\n                  <CurrencyAvatar currency={currencyA} />\n                </Grid>\n                <Grid item>\n                  <Typography>{currencyA?.symbol}</Typography>\n                </Grid>\n              </Grid>\n              <Grid item xs>\n                <Typography align=\"right\">{formattedAmounts[BURN_FIELD.CURRENCY_A] ?? 0}</Typography>\n              </Grid>\n            </Grid>\n            <Grid container mt={2} alignItems=\"center\">\n              <Grid item xs container alignItems=\"center\">\n                <Grid item mr={1}>\n                  <CurrencyAvatar currency={currencyB} />\n                </Grid>\n                <Grid item>\n                  <Typography>{currencyB?.symbol}</Typography>\n                </Grid>\n              </Grid>\n              <Grid item xs>\n                <Typography align=\"right\">{formattedAmounts[BURN_FIELD.CURRENCY_B] ?? 0}</Typography>\n              </Grid>\n            </Grid>\n          </Box>\n          <Button variant=\"contained\" size=\"large\" fullWidth sx={{ marginTop: \"40px\" }} onClick={onConfirm}>\n            <Trans>Remove</Trans>\n          </Button>\n        </>\n      </SwapModal>\n    );\n  },\n);\n","import { memo, useCallback, useMemo, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Grid, Box, Typography } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { CurrencyAmount, Position } from \"@w2e/swap-sdk\";\nimport { MainCard } from \"components/index\";\nimport PercentageSlider from \"components/PercentageSlider\";\nimport HeaderTab from \"components/swap/Header\";\nimport useDebouncedChangeHandler from \"hooks/useDebouncedChangeHandler\";\nimport { useBurnHandlers, useBurnInfo, useBurnState, useResetBurnState } from \"store/swapv2/burn/hooks\";\nimport { useSlippageManager, useUserTransactionsDeadline } from \"store/swapv2/cache/hooks\";\nimport { BURN_FIELD, slippageToPercent } from \"constants/mint\";\nimport {\n  usePosition as usePositionRequest,\n  decreaseLiquidity as decreaseLiquidityRequest,\n  decreaseInvalidLiquidity,\n} from \"hooks/swap/v2/useSwapCalls\";\nimport BigNumber from \"bignumber.js\";\nimport { useErrorTip, useSuccessTip, useLoadingTip } from \"hooks/useTips\";\nimport { useAccount } from \"store/global/hooks\";\nimport { CurrencyAmountFormatDecimals } from \"constants/index\";\nimport { t, Trans } from \"@lingui/macro\";\nimport Identity, { CallbackProps, SubmitLoadingProps } from \"components/Identity\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport { type StatusResult, type ActorIdentity } from \"@w2e/types\";\nimport LiquidityInfo from \"components/swap/LiquidityInfo\";\nimport Loading from \"components/Loading/Static\";\nimport { PoolState } from \"hooks/swap/v2/usePools\";\nimport { getLocaleMessage } from \"locales/services\";\nimport Button from \"components/authentication/ButtonConnector\";\nimport Unclaimed from \"./Unclaimed\";\nimport DecreaseLiquidityInput from \"./Input\";\nimport ConfirmRemoveLiquidityModal from \"./Confirm\";\n\nconst useStyle = makeStyles(() => {\n  return {\n    container: {\n      width: \"100%\",\n      maxWidth: \"720px\",\n    },\n  };\n});\n\nexport default memo(() => {\n  const classes = useStyle();\n  const history = useHistory();\n\n  const isInvalid = history.location.search?.includes(\"invalid\");\n  const principal = useAccountPrincipal();\n  const { positionId: _positionId } = useParams<{ positionId: string }>();\n  const positionId = BigInt(_positionId);\n\n  const { result: _position, loading: positionRequestLoading } = usePositionRequest(positionId, isInvalid);\n  const { independentField, typedValue } = useBurnState();\n  const {\n    position: positionSDK,\n    parsedAmounts,\n    error,\n    currencyA,\n    currencyB,\n    liquidityToRemove,\n    poolState,\n  } = useBurnInfo(_position);\n\n  const positionLoading = PoolState.LOADING === poolState || positionRequestLoading;\n\n  const { onUserInput } = useBurnHandlers();\n\n  const isValid = !error;\n\n  const formattedAmounts = {\n    // [BURN_FIELD.LIQUIDITY_PERCENT]: parsedAmounts[BURN_FIELD.LIQUIDITY_PERCENT].equalTo(\"0\")\n    //   ? \"0\"\n    //   : parsedAmounts[BURN_FIELD.LIQUIDITY_PERCENT].lessThan(new Percent(\"1\", \"100\"))\n    //   ? \"<1\"\n    //   : parsedAmounts[BURN_FIELD.LIQUIDITY_PERCENT].toFixed(0),\n    [BURN_FIELD.LIQUIDITY_PERCENT]: parsedAmounts[BURN_FIELD.LIQUIDITY_PERCENT].equalTo(\"0\")\n      ? \"0\"\n      : parsedAmounts[BURN_FIELD.LIQUIDITY_PERCENT].toFixed(2),\n    [BURN_FIELD.CURRENCY_A]:\n      independentField === BURN_FIELD.CURRENCY_A\n        ? typedValue\n        : parsedAmounts[BURN_FIELD.CURRENCY_A]?.toFixed(\n          CurrencyAmountFormatDecimals(parsedAmounts[BURN_FIELD.CURRENCY_A]?.currency.decimals),\n        ) ?? \"\",\n    [BURN_FIELD.CURRENCY_B]:\n      independentField === BURN_FIELD.CURRENCY_B\n        ? typedValue\n        : parsedAmounts[BURN_FIELD.CURRENCY_B]?.toFixed(\n          CurrencyAmountFormatDecimals(parsedAmounts[BURN_FIELD.CURRENCY_B]?.currency.decimals),\n        ) ?? \"\",\n  };\n\n  const totalAmount = useMemo(() => {\n    if (!positionSDK || !currencyA || !currencyB)\n      return {\n        [BURN_FIELD.CURRENCY_A]: 0,\n        [BURN_FIELD.CURRENCY_B]: 0,\n      };\n\n    return {\n      [BURN_FIELD.CURRENCY_A]: CurrencyAmount.fromRawAmount(currencyA, positionSDK.amount0.quotient).toFixed(\n        CurrencyAmountFormatDecimals(currencyA.decimals),\n      ),\n      [BURN_FIELD.CURRENCY_B]: CurrencyAmount.fromRawAmount(currencyB, positionSDK.amount1.quotient).toFixed(\n        CurrencyAmountFormatDecimals(currencyB.decimals),\n      ),\n    };\n  }, [positionSDK]);\n\n  const liquidityPercentChangeCallback = useCallback(\n    (value: number | number[]) => {\n      onUserInput(BURN_FIELD.LIQUIDITY_PERCENT, value.toString());\n    },\n    [onUserInput],\n  );\n\n  const onCurrencyAInput = useCallback(\n    (typedValue: string) => {\n      onUserInput(BURN_FIELD.CURRENCY_A, typedValue);\n    },\n    [onUserInput],\n  );\n\n  const onCurrencyBInput = useCallback(\n    (typedValue: string) => {\n      onUserInput(BURN_FIELD.CURRENCY_B, typedValue);\n    },\n    [onUserInput],\n  );\n\n  const [liquidityPercentage, setLiquidityPercentage] = useDebouncedChangeHandler<number | number[]>(\n    Number(formattedAmounts[BURN_FIELD.LIQUIDITY_PERCENT]),\n    liquidityPercentChangeCallback,\n  );\n\n  const resetBurnState = useResetBurnState();\n\n  const [slippageTolerance] = useSlippageManager(\"burn\");\n  const account = useAccount();\n  const transactionsDeadline = useUserTransactionsDeadline();\n\n  const [confirmModalShow, setConfirmModalShow] = useState(false);\n  const [openSuccessTip] = useSuccessTip();\n  const [openErrorTip] = useErrorTip();\n  const [openLoadingTip, closeLoadingTip] = useLoadingTip();\n\n  const handleBack = useCallback(() => {\n    resetBurnState();\n    history.push(\"/swap/v2/liquidity\");\n  }, [history, resetBurnState]);\n\n  const handleConfirm = useCallback(\n    async (identity: ActorIdentity, { loading }: SubmitLoadingProps) => {\n      if (!positionSDK || !liquidityToRemove || loading || !principal) {\n        return;\n      }\n\n      const loadingTipKey = openLoadingTip(`Remove ${currencyA?.symbol}/${currencyB?.symbol} liquidity`);\n      setConfirmModalShow(false);\n\n      const partialPosition = new Position({\n        pool: positionSDK.pool,\n        liquidity: liquidityToRemove.multiply(positionSDK.liquidity).quotient,\n        tickLower: positionSDK.tickLower,\n        tickUpper: positionSDK.tickUpper,\n      });\n\n      const { amount0: amount0Min, amount1: amount1Min } = partialPosition.burnAmountsWithSlippage(\n        slippageToPercent(slippageTolerance),\n      );\n\n      let result:\n        | undefined\n        | StatusResult<{\n          amount0: bigint;\n          amount1: bigint;\n        }>;\n\n      if (isInvalid) {\n        result = await decreaseInvalidLiquidity(identity, {\n          tokenId: positionId,\n          liquidity: partialPosition.liquidity.toString(),\n          amount0Min: amount0Min.toString(),\n          amount1Min: amount1Min.toString(),\n          deadline: BigInt(transactionsDeadline),\n          recipient: principal,\n        });\n      } else {\n        result = await decreaseLiquidityRequest(identity, {\n          tokenId: positionId,\n          liquidity: partialPosition.liquidity.toString(),\n          amount0Min: amount0Min.toString(),\n          amount1Min: amount1Min.toString(),\n          deadline: BigInt(transactionsDeadline),\n          recipient: principal,\n        });\n      }\n\n      const { status, message } = result;\n\n      closeLoadingTip(loadingTipKey);\n\n      if (status === \"ok\") {\n        openSuccessTip(t`Removed liquidity successfully`);\n        handleBack();\n      } else {\n        openErrorTip(getLocaleMessage(message) ?? t`Failed to remove liquidity`);\n      }\n    },\n    [positionSDK, liquidityToRemove, slippageTolerance, positionId, transactionsDeadline, account],\n  );\n\n  const handleDecreaseLiquidity = useCallback(() => {\n    setConfirmModalShow(true);\n  }, [setConfirmModalShow]);\n\n  const handleCancel = useCallback(() => {\n    setConfirmModalShow(false);\n  }, [setConfirmModalShow]);\n\n  return (\n    <Identity onSubmit={handleConfirm}>\n      {({ submit, loading }: CallbackProps) => (\n        <>\n          <Grid container justifyContent=\"center\">\n            <MainCard level={1} className={`${classes.container} lightGray200`}>\n              <HeaderTab\n                title={t`Remove Liquidity`}\n                showArrow\n                showUserSetting\n                slippageType=\"burn\"\n                onBack={handleBack}\n              />\n              <Box mt=\"22px\">\n                <LiquidityInfo position={positionSDK} positionId={positionId} version=\"v2\" />\n              </Box>\n              <Box mt=\"22px\">\n                <Typography variant=\"h5\" color=\"textPrimary\">\n                  <Trans>Amount</Trans>\n                </Typography>\n                <Box mt=\"12px\">\n                  <DecreaseLiquidityInput\n                    totalAmount={totalAmount[BURN_FIELD.CURRENCY_A]}\n                    currency={currencyA}\n                    onUserInput={onCurrencyAInput}\n                    value={formattedAmounts[BURN_FIELD.CURRENCY_A] ?? 0}\n                  />\n                </Box>\n                <Box mt={2}>\n                  <DecreaseLiquidityInput\n                    totalAmount={totalAmount[BURN_FIELD.CURRENCY_B]}\n                    currency={currencyB}\n                    onUserInput={onCurrencyBInput}\n                    value={formattedAmounts[BURN_FIELD.CURRENCY_B] ?? 0}\n                  />\n                </Box>\n              </Box>\n              <Box\n                mt={5}\n                sx={{\n                  paddingRight: \"12px\",\n                }}\n              >\n                <PercentageSlider\n                  value={new BigNumber(liquidityPercentage?.toString() ?? 0).toNumber()}\n                  onChange={(event, value) => setLiquidityPercentage(value)}\n                />\n              </Box>\n\n              <Box mt=\"30px\">\n                <Unclaimed position={positionSDK} positionId={positionId} invalid={isInvalid} />\n              </Box>\n\n              <Box mt={4}>\n                <Button\n                  variant=\"contained\"\n                  fullWidth\n                  disabled={!isValid || loading}\n                  size=\"large\"\n                  onClick={handleDecreaseLiquidity}\n                >\n                  {isValid ? t`Remove` : error}\n                </Button>\n              </Box>\n            </MainCard>\n\n            {positionLoading && (\n              <Box sx={{ position: \"absolute\", top: 0, left: 0, width: \"100%\", height: \"100%\" }}>\n                <Loading loading={positionLoading} mask />\n              </Box>\n            )}\n          </Grid>\n          {confirmModalShow && (\n            <ConfirmRemoveLiquidityModal\n              open={confirmModalShow}\n              onConfirm={submit}\n              onCancel={handleCancel}\n              currencyA={currencyA}\n              currencyB={currencyB}\n              formattedAmounts={formattedAmounts}\n            />\n          )}\n        </>\n      )}\n    </Identity>\n  );\n});\n","import { Position } from \"../entities/position\";\n\nexport function getPriceOrderingFromPositionForUI(position: Position | undefined) {\n  if (!position) return {};\n\n  const token0 = position.amount0.currency;\n  const token1 = position.amount1.currency;\n\n  // if both prices are below 1, invert\n  if (position.token0PriceUpper.lessThan(1)) {\n    return {\n      priceLower: position.token0PriceUpper.invert(),\n      priceUpper: position.token0PriceLower.invert(),\n      quote: token0,\n      base: token1,\n    };\n  }\n\n  // otherwise, just return the default\n  return {\n    priceLower: position.token0PriceLower,\n    priceUpper: position.token0PriceUpper,\n    quote: token1,\n    base: token0,\n  };\n}\n","import { Token } from \"../core/entities/token\";\nimport { Price } from \"../core/entities/fractions/price\";\n\ninterface useInverterProps {\n  priceLower: Price<Token, Token> | undefined;\n  priceUpper: Price<Token, Token> | undefined;\n  quote: Token | undefined;\n  base: Token | undefined;\n  invert: boolean;\n}\n\nexport function useInverter({ priceLower, priceUpper, quote, base, invert }: useInverterProps) {\n  return {\n    priceUpper: invert ? priceLower?.invert() : priceUpper,\n    priceLower: invert ? priceUpper?.invert() : priceLower,\n    quote: invert ? base : quote,\n    base: invert ? quote : base,\n  };\n}\n"],"names":["useStyles","_ref","borderColor","size","makeStyles","avatar","width","height","border","concat","CurrencyAvatar","_ref2","currency","bgColor","className","classes","_jsx","Avatar","sx","bgcolor","src","logo","children","marks","value","useStyle","theme","root","color","colors","secondaryMain","backgroundColor","isDarkTheme","palette","background","level4","marginLeft","borderRadius","top","transform","opacity","tooltip","LightTooltip","styled","props","Tooltip","popper","tooltipClasses","fontWeight","ValueLabelComponent","placement","arrow","title","PercentageSlider","Slider","valueLabelDisplay","components","ValueLabel","SwapHeader","showArrow","onBack","history","useHistory","handleBack","useCallback","goBack","_jsxs","Grid","container","item","xs","justifyContent","ArrowBackIcon","cursor","onClick","Typography","variant","position","customizeTheme","createTheme","breakpoints","values","sm","NFTBox","marginRight","level2","down","marginBottom","NFTWrapper","currentPrice","level3","padding","rangeBox","LiquidityInfo","pool","tickLower","tickUpper","token0","token1","fee","feeAmount","pricesFromPosition","getPriceOrderingFromPositionForUI","manuallyInverted","setManuallyInverted","useState","priceLower","priceUpper","base","useInverter","quote","invert","inverted","equals","undefined","currencyQuote","currencyBase","_tickAtLimit","useIsTickAtLimit","tickAtLimit","useMemo","Bound","LOWER","UPPER","pairName","symbol","outOfRange","tickCurrent","closed","_position$liquidity","liquidity","toString","hasLiquidity","flexDirection","alignItems","Box","display","TokenImage","tokenId","address","left","fontSize","margin","PositionRangeState","Trans","id","maxWidth","whiteSpace","textOverflow","overflow","priceOf","toSignificant","SyncAltIcon","mt","gap","formatTickPrice","wrapper","darkPrimary400","darkLevel1","Marker","SvgIcon","viewBox","d","fill","Closed","component","OutOfRange","InRange","usePositionFees","positionId","invalid","reload","result","usePositionFeesCall","amount0","amount1","useDebouncedChangeHandler","onChange","debouncedMs","arguments","length","inner","setInner","timer","useRef","onChangeInner","newValue","current","clearTimeout","setTimeout","useEffect","useUserTransactionsDeadline","useAppSelector","state","swapV2Cache","userTransactionsDeadline","useSlippageManager","type","dispatch","useAppDispatch","userSlippage","updateUserSlippage","useBurnState","swapV2Burn","Unclaimed","feeAmount0","feeAmount1","currencyFeeAmount0","CurrencyAmount","fromRawAmount","numberToString","currencyFeeAmount1","align","BigNumber","toExact","multipliedBy","inputBox","tokenButton","input","textAlign","DecreaseLiquidityInput","_currency$decimals","onUserInput","totalAmount","useTheme","alt","NumberTextField","fullWidth","placeholder","numericProps","thousandSeparator","decimalScale","decimals","allowNegative","maxLength","MAX_SWAP_INPUT_LENGTH","e","target","memo","_formattedAmounts$BUR","_formattedAmounts$BUR2","open","onCancel","onConfirm","formattedAmounts","currencyA","currencyB","SwapModal","onClose","_Fragment","mr","BURN_FIELD","CURRENCY_A","CURRENCY_B","Button","marginTop","_history$location$sea","_parsedAmounts$BURN_F","_parsedAmounts$BURN_F2","_parsedAmounts$BURN_F3","_parsedAmounts$BURN_F4","_parsedAmounts$BURN_F5","_parsedAmounts$BURN_F6","isInvalid","location","search","includes","principal","useAccountPrincipal","_positionId","useParams","BigInt","_position","loading","positionRequestLoading","usePositionRequest","independentField","typedValue","positionSDK","parsedAmounts","error","liquidityToRemove","poolState","_useToken","_useToken2","token0Address","token1Address","useToken","usePool","Number","Position","tokenA","tokenB","wrapped","tokens","liquidityValues","percentToRemove","Percent","LIQUIDITY_PERCENT","independentAmount","tryParseAmount","liquidityValue","greaterThan","quotient","discountedAmount0","multiply","discountedAmount1","_error","_error2","String","i18n","_","liquidityValue0","liquidityValue1","useBurnInfo","positionLoading","PoolState","LOADING","updateTypedInput","useBurnHandlers","isValid","equalTo","toFixed","CurrencyAmountFormatDecimals","liquidityPercentChangeCallback","onCurrencyAInput","onCurrencyBInput","liquidityPercentage","setLiquidityPercentage","resetBurnState","useResetBurnState","slippageTolerance","account","useAccount","transactionsDeadline","confirmModalShow","setConfirmModalShow","openSuccessTip","useSuccessTip","openErrorTip","useErrorTip","openLoadingTip","closeLoadingTip","useLoadingTip","push","handleConfirm","async","identity","loadingTipKey","partialPosition","amount0Min","amount1Min","burnAmountsWithSlippage","slippageToPercent","decreaseInvalidLiquidity","deadline","recipient","decreaseLiquidityRequest","status","message","_getLocaleMessage","getLocaleMessage","handleDecreaseLiquidity","handleCancel","Identity","onSubmit","_liquidityPercentage$","submit","MainCard","level","HeaderTab","showUserSetting","slippageType","version","paddingRight","toNumber","event","disabled","Loading","mask","ConfirmRemoveLiquidityModal","token0PriceUpper","lessThan","token0PriceLower"],"sourceRoot":""}