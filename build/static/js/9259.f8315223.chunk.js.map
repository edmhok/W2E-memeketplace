{"version":3,"file":"static/js/9259.f8315223.chunk.js","mappings":"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","sources":["components/ConnectWallet.tsx","components/MaxButton.tsx","assets/icons/Copy.svg","assets/icons/refresh.svg","components/Wallet/context.ts","components/Wallet/WalletAccount.tsx","components/TokenTransfer/index.tsx","components/XTCTopup/index.tsx","hooks/token/dip20.ts","components/Wallet/NFIDTransfer.tsx","components/qrcode/index.tsx","components/Wallet/Receive.tsx","components/Wallet/TokenListTable.tsx","assets/icons/add.svg","components/Wallet/AddToken/modal.tsx","components/Wallet/AddToken/index.tsx","components/Wallet/PageToggle.tsx","components/Wallet/TokenListHeader.tsx","components/Wallet/TokenList.tsx","views/wallet/index.tsx","../packages/utils/src/isValidAccount.ts"],"sourcesContent":["import { Grid, Box, Typography, Button } from \"@mui/material\";\nimport { MainCard } from \"components/index\";\nimport NoData from \"components/no-data\";\nimport { useWalletConnectorManager } from \"store/auth/hooks\";\nimport { Trans } from \"@lingui/macro\";\n\nexport default function ConnectWallet() {\n  const [, walletManager] = useWalletConnectorManager();\n\n  return (\n    <Grid container justifyContent=\"center\">\n      <Box sx={{ maxWidth: \"1400px\", width: \"100%\" }}>\n        <MainCard level={3}>\n          <Grid container alignItems=\"center\" flexDirection=\"column\" sx={{ height: \"250px\" }}>\n            <NoData />\n            <Typography color=\"text.primary\">\n              <Trans>Connect wallet to view</Trans>\n            </Typography>\n            <Button\n              variant=\"contained\"\n              onClick={() => walletManager(true)}\n              sx={{ width: \"100%\", maxWidth: \"522px\", marginTop: \"23px\" }}\n              size=\"large\"\n            >\n              <Trans>Connect Wallet</Trans>\n            </Button>\n          </Grid>\n        </MainCard>\n      </Box>\n    </Grid>\n  );\n}\n","import { Typography, TypographyProps } from \"@mui/material\";\nimport { useTheme } from \"@mui/styles\";\nimport { Theme } from \"@mui/material/styles\";\nimport { Trans } from \"@lingui/macro\";\n\nexport default function MaxButton(props: TypographyProps) {\n  const theme = useTheme() as Theme;\n\n  return (\n    <Typography\n      {...props}\n      sx={{\n        padding: \"1px 3px\",\n        cursor: \"pointer\",\n        borderRadius: \"2px\",\n        backgroundColor: theme.colors.secondaryMain,\n        color: \"#ffffff\",\n        fontSize: \"12px\",\n        ...(props.sx ?? {}),\n      }}\n    >\n      <Trans>Max</Trans>\n    </Typography>\n  );\n}\n","var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCopy(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 12,\n    viewBox: \"0 0 12 12\",\n    fill: \"currentColor\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8 4H2V10H8V4ZM2 3C1.44772 3 1 3.44772 1 4V10C1 10.5523 1.44772 11 2 11H8C8.55228 11 9 10.5523 9 10V4C9 3.44772 8.55228 3 8 3H2Z\",\n    fill: \"currentColor\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M10 9L10 2L3 2L3 0.999999L10 1C10.5523 1 11 1.44772 11 2L11 9L10 9Z\",\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/Copy.351d8604b102850f77eb6e2d05b49bb6.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgRefresh(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_36506_15939)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.0013 3.33268V0.666016L4.66797 3.99935L8.0013 7.33268V4.66602C10.208 4.66602 12.0013 6.45935 12.0013 8.66602C12.0013 10.8727 10.208 12.666 8.0013 12.666C5.79464 12.666 4.0013 10.8727 4.0013 8.66602H2.66797C2.66797 11.6127 5.05464 13.9993 8.0013 13.9993C10.948 13.9993 13.3346 11.6127 13.3346 8.66602C13.3346 5.71935 10.948 3.33268 8.0013 3.33268Z\",\n    fill: \"white\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_36506_15939\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 16,\n    height: 16,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgRefresh);\nexport default __webpack_public_path__ + \"static/media/refresh.c4b33d449a121c8f8626c6c7d9b9df0f.svg\";\nexport { ForwardRef as ReactComponent };","import { createContext } from \"react\";\nimport BigNumber from \"bignumber.js\";\n\nexport type TokenBalance = { [tokenId: string]: BigNumber };\n\nexport type Page = \"token\";\n\nexport interface WalletContextProps {\n  refreshTotalBalance?: boolean;\n  setRefreshTotalBalance?: (refreshTotalBalance: boolean) => void;\n  refreshCounter: number;\n  setRefreshCounter: (refreshCounter: number) => void;\n  totalValue: BigNumber;\n  setTotalValue: (tokenId: string, value: BigNumber) => void;\n  transferTo: string;\n  setTransferTo: (transferTo: string) => void;\n  transferAmount: BigNumber;\n  setTransferAmount: (transferAmount: BigNumber) => void;\n  page: Page;\n  setPage: (page: Page) => void;\n  totalUSDBeforeChange: BigNumber;\n  setTotalUSDBeforeChange: (tokenId: string, value: BigNumber) => void;\n}\n\nexport default createContext<WalletContextProps>({} as WalletContextProps);\n","import { useContext, useMemo, useRef } from \"react\";\nimport { Box, Typography } from \"@mui/material\";\nimport { formatDollarAmount, } from \"@w2e/utils\";\nimport { Trans } from \"@lingui/macro\";\nimport { useSuccessTip } from \"hooks/useTips\";\nimport { useICPPrice } from \"hooks/useUSDPrice\";\nimport { ReactComponent as CopyIcon } from \"assets/icons/Copy.svg\";\nimport Copy, { CopyRef } from \"components/Copy\";\nimport { ReactComponent as RefreshIcon } from \"assets/icons/refresh.svg\";\nimport WalletContext from \"./context\";\n\nexport interface AddressWrapperProps {\n  address: string | undefined;\n  label: string;\n}\n\nexport function AddressWrapper({ address, label }: AddressWrapperProps) {\n  const copyRef = useRef<CopyRef>(null);\n\n  const handleCopy = () => {\n    if (copyRef) {\n      copyRef?.current?.copy();\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        maxWidth: \"286px\",\n        borderRadius: \"8px\",\n        padding: \"12px\",\n        border: \"1px solid #29314F\",\n        height: \"fit-content\",\n        \"@media(max-width: 640px)\": {\n          maxWidth: \"100%\",\n        },\n      }}\n    >\n      <Box\n        sx={{\n          width: \"70px\",\n          height: \"20px\",\n          borderRadius: \"30px\",\n          background: \"#29314F\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Typography sx={{ fontSize: \"12px\", transform: \"scale(0.9)\" }}>{label}</Typography>\n      </Box>\n\n      <Box sx={{ margin: \"8px 0 0 0\", wordBreak: \"break-all\" }}>\n        <Typography\n          sx={{ fontSize: \"12px\", whiteSpace: \"break-spaces\", cursor: \"pointer\", userSelect: \"none\" }}\n          component=\"span\"\n          onClick={handleCopy}\n        >\n          {address}\n        </Typography>\n        <Box component=\"span\" sx={{ cursor: \"pointer\", margin: \"0 0 0 4px\", color: \"#5669DC\" }} onClick={handleCopy}>\n          <CopyIcon />\n        </Box>\n      </Box>\n\n      <Copy content={address ?? \"\"} hide ref={copyRef} />\n    </Box>\n  );\n}\n\nexport default function WalletAccount() {\n  const icpPrice = useICPPrice();\n\n  const [openSuccessTip] = useSuccessTip();\n\n  const {\n    refreshTotalBalance,\n    setRefreshTotalBalance,\n    refreshCounter,\n    setRefreshCounter,\n    totalValue,\n    totalUSDBeforeChange,\n  } = useContext(WalletContext);\n\n  const useTotalICPValue = useMemo(() => {\n    if (icpPrice) return totalValue.dividedBy(icpPrice);\n    return undefined;\n  }, [totalValue, icpPrice]);\n\n  const usdChange = useMemo(() => {\n    if (totalValue.isEqualTo(0) || totalUSDBeforeChange.isEqualTo(0)) return undefined;\n    return `${totalValue.minus(totalUSDBeforeChange).dividedBy(totalUSDBeforeChange).multipliedBy(100).toFixed(2)}%`;\n  }, [totalUSDBeforeChange, totalValue]);\n\n  const usdChangeType = usdChange && usdChange.includes(\"-\") ? \"down\" : \"up\";\n  const USDChangeColor = usdChangeType === \"up\" ? \"#54C081\" : \"#D3625B\";\n\n  const handleRefreshBalance = () => {\n    if (setRefreshTotalBalance) setRefreshTotalBalance(!refreshTotalBalance);\n    setRefreshCounter(refreshCounter + 1);\n    openSuccessTip(\"Refresh Success\");\n  };\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"center\",\n        padding: \"0 0 30px 0\",\n        borderBottom: \"1px solid #29314F\",\n        \"@media(max-width: 640px)\": {\n          flexDirection: \"column\",\n          gap: \"20px 0\",\n        },\n      }}\n    >\n      <Box>\n        <Box sx={{ display: \"flex\", gap: \"0 8px\", alignItems: \"center\" }}>\n          <Typography>\n            <Trans>Estimated Balance</Trans>\n          </Typography>\n\n          <RefreshIcon style={{ cursor: \"pointer\" }} onClick={handleRefreshBalance} />\n        </Box>\n\n        <Box sx={{ margin: \"10px 0 0 0\" }}>\n          <Typography component=\"span\" sx={{ fontSize: \"32px\", fontWeight: 600 }} color=\"text.primary\">\n            ≈{formatDollarAmount(totalValue.toString(), 2)}\n          </Typography>\n        </Box>\n\n        <Box sx={{ margin: \"6px 0 0 0\", display: \"flex\", gap: \"0 8px\" }}>\n          <Typography>≈{useTotalICPValue ? useTotalICPValue.toFormat(4) : 0}&nbsp;ICP</Typography>\n          <Typography sx={{ color: USDChangeColor }} component=\"span\">\n            {usdChange ? `${usdChangeType === \"down\" ? \"\" : \"+\"}${usdChange}` : \"--\"}\n          </Typography>\n        </Box>\n      </Box>\n\n\n    </Box>\n  );\n}\n","import React, { useState, useContext, useMemo } from \"react\";\nimport { Button, Grid, Typography, Box, InputAdornment } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport {\n  parseTokenAmount,\n  formatTokenAmount,\n  isValidAccount,\n  isValidPrincipal,\n  toSignificantWithGroupSeparator,\n} from \"@w2e/utils\";\nimport BigNumber from \"bignumber.js\";\nimport { ICP, W2E } from \"constants/tokens\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { useErrorTip, useSuccessTip } from \"hooks/useTips\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { tokenTransfer } from \"hooks/token/calls\";\nimport { useTokenBalance } from \"hooks/token/useTokenBalance\";\nimport { getLocaleMessage } from \"locales/services\";\nimport Identity, { CallbackProps, SubmitLoadingProps } from \"components/Identity/index\";\nimport { Theme } from \"@mui/material/styles\";\nimport { TokenInfo } from \"types/token\";\nimport { Identity as CallIdentity } from \"types/index\";\nimport { useAccountPrincipalString, useAccount, useAccountPrincipal } from \"store/auth/hooks\";\nimport WalletContext from \"components/Wallet/context\";\nimport { Modal, FilledTextField, NumberFilledTextField } from \"components/index\";\nimport { Principal } from \"@dfinity/principal\";\nimport MaxButton from \"components/MaxButton\";\nimport { useUSDPriceById } from \"hooks/useUSDPrice\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    warningText: {\n      color: theme.palette.warning.dark,\n    },\n  };\n});\n\nexport type Values = {\n  to: string;\n  weight: string;\n  amount: number;\n};\n\nfunction usePrincipalStandard(tokenId: string, standard: string) {\n  return (standard.includes(\"DIP20\") || standard.includes(\"ICRC\")) && tokenId !== ICP.address;\n}\n\nfunction useAccountStandard(tokenId: string, standard: string) {\n  return !usePrincipalStandard(tokenId, standard);\n}\n\nexport interface TransferModalProps {\n  open: boolean;\n  onClose: () => void;\n  onTransferSuccess?: () => void;\n  token: TokenInfo;\n  transferTo?: string;\n}\n\nexport default function TransferModal({ open, onClose, onTransferSuccess, token, transferTo }: TransferModalProps) {\n  const [principalFromState] = React.useState(\"\");\n  const classes = useStyles();\n  const account = useAccount();\n  const principalString = useAccountPrincipalString();\n  const principal = useAccountPrincipal() || principalFromState;\n  const [openErrorTip] = useErrorTip();\n  const [openSuccessTip] = useSuccessTip();\n\n  const { refreshTotalBalance, setRefreshTotalBalance } = useContext(WalletContext);\n\n  const { result: balance } = useTokenBalance(token.canisterId, principal);\n  const tokenUSDPrice = useUSDPriceById(token.canisterId);\n\n  const initialValues = {\n    to: transferTo ?? \"\",\n    weight: \"\",\n    amount: 0,\n  };\n\n  const [values, setValues] = useState<Values>(initialValues);\n\n  const handleFieldChange = (value: string, field: string) => {\n    setValues({\n      ...values,\n      [field]: value,\n    });\n  };\n\n  const getErrorMessage = () => {\n    if (!values.to) return t`Enter transfer to`;\n\n    if (usePrincipalStandard(token.canisterId, token.standardType)) {\n      try {\n        Principal.fromText(values.to);\n      } catch (error) {\n        return t`Invalid principal ID`;\n      }\n    } else if (!isValidAccount(values.to) && !isValidPrincipal(values.to)) return t`Invalid account ID or principal ID`;\n\n    if (!values.amount) return t`Enter an amount`;\n    if (\n      values.amount &&\n      new BigNumber(values.amount ?? 0).isGreaterThan(parseTokenAmount(balance ?? 0, token.decimals))\n    )\n      return t`Insufficient balance`;\n    if (!new BigNumber(values.amount).minus(parseTokenAmount(token.transFee, token.decimals)).isGreaterThan(0))\n      return t`Must be greater than trans fee`;\n\n    return undefined;\n  };\n\n  const handleSubmit = async (identity: CallIdentity, { loading, closeLoading }: SubmitLoadingProps) => {\n    try {\n      if (loading || !account) return;\n\n      // Calculate the actual transfer amount considering weight\n      const weight = new BigNumber(values.weight ?? 0);\n      const amount = new BigNumber(values.amount ?? 0).multipliedBy(weight);\n\n      const actualTransferAmount = amount.minus(parseTokenAmount(token.transFee, token.decimals));\n\n      if (actualTransferAmount.isLessThanOrEqualTo(0)) {\n        openErrorTip(t`Transfer amount must be greater than transaction fee.`);\n        return;\n      }\n\n      const { status, message } = await tokenTransfer({\n        canisterId: token.canisterId.toString(),\n        to: values.to,\n        amount: formatTokenAmount(\n          new BigNumber(values.amount).minus(parseTokenAmount(token.transFee, token.decimals)),\n          token.decimals,\n        ),\n        from: account,\n        fee: token.transFee,\n        decimals: token.decimals,\n      });\n\n      if (status === \"ok\") {\n        openSuccessTip(t`Transferred successfully`);\n        setValues(initialValues);\n        if (onTransferSuccess) onTransferSuccess();\n        if (token.canisterId.toString() === ICP.address || token.canisterId.toString() === W2E.address) {\n          if (setRefreshTotalBalance) setRefreshTotalBalance(!refreshTotalBalance);\n        }\n      } else {\n        openErrorTip(getLocaleMessage(message) ?? t`Failed to transfer`);\n      }\n\n      closeLoading();\n    } catch (error) {\n      console.error(error);\n      closeLoading();\n    }\n  };\n\n  const actualTransferAmount = useMemo(() => {\n    const weight = new BigNumber(values.weight ?? 0);\n    const amount = new BigNumber(values.amount ?? 0).multipliedBy(weight);\n    return amount.isGreaterThan(0) ? amount.minus(parseTokenAmount(token.transFee, token.decimals)).toString() : \"0\";\n  }, [values, token]);\n\n  const addressHelpText = () => {\n    if (\n      (usePrincipalStandard(token.canisterId, token.standardType) && principalString === values.to) ||\n      (useAccountStandard(token.canisterId, token.standardType) && account === values.to) ||\n      (useAccountStandard(token.canisterId, token.standardType) &&\n        isValidPrincipal(values.to) &&\n        principalString === values.to)\n    ) {\n      return (\n        <span className={classes.warningText}>\n          <Trans>Be careful, you are transferring tokens to your own address!</Trans>\n        </span>\n      );\n    }\n  };\n\n  const errorMessage = getErrorMessage();\n\n  const handleMax = (event: React.MouseEvent<HTMLParagraphElement>) => {\n    event.stopPropagation();\n\n    if (balance) {\n      handleFieldChange(parseTokenAmount(balance, token.decimals).toString(), \"amount\");\n    }\n  };\n\n  return (\n    <Modal open={open} onClose={onClose} title={t`Transfer`}>\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: \"24px 0\" }}>\n        <FilledTextField value={token.symbol} fullWidth />\n\n        <FilledTextField\n          value={values.to} // Use principal if available, else use 'to' field value\n          placeholder={\n            usePrincipalStandard(token.canisterId, token.standardType)\n              ? t`Enter the principal ID`\n              : t`Enter the account ID or principal ID`\n          }\n          onChange={(value: string) => handleFieldChange(value, \"to\")}\n          helperText={addressHelpText()}\n          fullWidth\n          autoComplete=\"To\"\n          multiline\n\n        />\n\n        <NumberFilledTextField\n          placeholder=\"Enter weight in kilogram\"\n          value={values.weight}\n          onChange={(value: string) => handleFieldChange(value, \"weight\")}\n          fullWidth\n          numericProps={{\n            allowNegative: false,\n          }}\n          autoComplete=\"off\"\n        />\n        <NumberFilledTextField\n          placeholder=\"Enter the amount\"\n          value={values.amount}\n          onChange={(value: string) => handleFieldChange(value, \"amount\")}\n          fullWidth\n          numericProps={{\n            allowNegative: false,\n            decimalScale: token.decimals,\n          }}\n          autoComplete=\"off\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <Typography color=\"text.primary\">\n                  {tokenUSDPrice && values.amount\n                    ? `~$${toSignificantWithGroupSeparator(\n                      new BigNumber(values.amount).multipliedBy(tokenUSDPrice).toString(),\n                      4,\n                    )}`\n                    : \"--\"}\n                </Typography>\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        <Grid container alignItems=\"center\">\n          <Typography>\n            <Trans>\n              Balance:{\" \"}\n              {`${balance\n                ? new BigNumber(\n                  parseTokenAmount(balance, token.decimals).toFixed(token.decimals > 8 ? 8 : token.decimals),\n                ).toFormat()\n                : \"--\"\n                }`}\n            </Trans>\n          </Typography>\n          <MaxButton\n            sx={{\n              marginLeft: \"6px\",\n            }}\n            onClick={handleMax}\n          />\n        </Grid>\n        <Typography>\n          <Trans>Fee:</Trans> {parseTokenAmount(token?.transFee?.toString(), token.decimals).toFormat()}\n          &nbsp;{token.symbol}&nbsp;(\n          {tokenUSDPrice && token\n            ? `$${toSignificantWithGroupSeparator(\n              parseTokenAmount(token.transFee.toString(), token.decimals).multipliedBy(tokenUSDPrice).toString(),\n              4,\n            )}`\n            : \"--\"}\n          )\n        </Typography>\n        <Typography>\n          <Trans>Actually:</Trans> {toSignificantWithGroupSeparator(actualTransferAmount, 18)}\n          &nbsp;{token.symbol}&nbsp;(\n          {tokenUSDPrice && token\n            ? `$${toSignificantWithGroupSeparator(\n              new BigNumber(actualTransferAmount).multipliedBy(tokenUSDPrice).toString(),\n              4,\n            )}`\n            : \"--\"}\n          )\n        </Typography>\n        <Typography color=\"text.warning\">\n          <Trans>Please ensure that the receiving address supports this Token/NFT!</Trans>\n        </Typography>\n        <Identity onSubmit={handleSubmit} fullScreenLoading>\n          {({ submit, loading }: CallbackProps) => (\n            <Button\n              variant=\"contained\"\n              fullWidth\n              color=\"primary\"\n              size=\"large\"\n              disabled={loading || !!errorMessage}\n              onClick={submit}\n            >\n              {errorMessage || (!loading ? <Trans>Confirm</Trans> : <CircularProgress size={26} color=\"inherit\" />)}\n            </Button>\n          )}\n        </Identity>\n      </Box>\n    </Modal>\n  );\n}\n","import { useState } from \"react\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { FilledTextField, Modal, TextFieldNumberComponent, MaxButton } from \"components/index\";\nimport { Box, Button, Typography, Grid } from \"@mui/material\";\nimport { useTokenBalance } from \"hooks/token/useTokenBalance\";\nimport { useAccountPrincipal } from \"store/auth/hooks\";\nimport { XTC } from \"constants/tokens\";\nimport { useTokenInfo } from \"hooks/token/useTokenInfo\";\nimport { parseTokenAmount, formatTokenAmount, numberToString, isValidPrincipal } from \"@w2e/utils\";\nimport BigNumber from \"bignumber.js\";\nimport Identity, { CallbackProps, SubmitLoadingProps } from \"components/Identity\";\nimport { Identity as CallIdentity } from \"types/global\";\nimport { useTips, TIP_LOADING, TIP_SUCCESS, TIP_ERROR } from \"hooks/useTips\";\nimport { useXTCTopUp } from \"hooks/token/dip20\";\nimport { getLocaleMessage } from \"locales/services\";\nimport { ResultStatus } from \"constants/index\";\n\nexport interface XTCTopUpProps {\n  open: boolean;\n  onClose: () => void;\n  onTopUpSuccess?: () => void;\n}\n\nexport interface Values {\n  amount: string | number;\n  canisterId: string;\n}\n\nexport default function XTCTopUp({ open, onClose, onTopUpSuccess }: XTCTopUpProps) {\n  const principal = useAccountPrincipal();\n  const { result: token } = useTokenInfo(XTC.address);\n  const { result: balance, loading } = useTokenBalance(XTC.address, principal);\n\n  const defaultValues = {\n    canisterId: \"\",\n    amount: \"\",\n  };\n\n  const [values, setValues] = useState<Values>(defaultValues);\n  const [openTip, closeTip] = useTips();\n\n  const onFieldChange = (value: any, field: string) => {\n    setValues((prevState) => ({\n      ...prevState,\n      [field]: value,\n    }));\n  };\n\n  const XTCTopUp = useXTCTopUp();\n\n  const handleTopUp = async (identity: CallIdentity, { loading }: SubmitLoadingProps) => {\n    if (loading || !token) return;\n\n    onClose();\n    setValues(defaultValues);\n\n    const loadingTipKey = openTip(t`Top-up ${values.amount} XTC to canister ${values.canisterId}`, TIP_LOADING);\n\n    const { status, message } = await XTCTopUp({\n      identity,\n      canisterId: values.canisterId,\n      amount: BigInt(numberToString(formatTokenAmount(values.amount, token.decimals).minus(Number(token.transFee)))),\n    });\n\n    closeTip(loadingTipKey);\n\n    if (status === ResultStatus.OK) {\n      openTip(t`Top-up successfully`, TIP_SUCCESS);\n      if (onTopUpSuccess) onTopUpSuccess();\n    } else {\n      openTip(getLocaleMessage(message) ?? message, TIP_ERROR);\n    }\n  };\n\n  const handleMax = () => {\n    if (balance && token) {\n      setValues((prevState) => ({\n        ...prevState,\n        amount: parseTokenAmount(balance, token.decimals).toNumber(),\n      }));\n    }\n  };\n\n  let errorMessage = \"\";\n  if (\n    values.amount &&\n    token &&\n    new BigNumber(Number(values.amount)).isGreaterThan(parseTokenAmount(balance ?? 0, token.decimals))\n  )\n    errorMessage = t`Insufficient balance`;\n  if (!values.amount) errorMessage = t`Enter top-up XTC amount`;\n  if (values.canisterId && !isValidPrincipal(values.canisterId)) errorMessage = t`Invalid canister id`;\n  if (!values.canisterId) errorMessage = t`Enter top-up canister id`;\n\n  return (\n    <Modal open={open} title={t`Top-up a Canister by XTC`} onClose={onClose}>\n      <Box>\n        <FilledTextField\n          label={<Trans>Canister ID</Trans>}\n          onChange={(value) => onFieldChange(value, \"canisterId\")}\n          placeholder={t`Enter a canister ID`}\n        />\n      </Box>\n\n      <Box mt=\"20px\">\n        <FilledTextField\n          label={<Trans>Amount</Trans>}\n          value={values.amount}\n          onChange={(value) => onFieldChange(value, \"amount\")}\n          InputProps={{\n            inputComponent: TextFieldNumberComponent,\n            inputProps: {\n              allowNegative: false,\n              decimalScale: 4,\n              maxLength: 16,\n            },\n          }}\n          placeholder={t`Enter top-up amount`}\n        />\n      </Box>\n\n      <Grid container alignItems=\"center\" mt=\"12px\">\n        <Typography color=\"text.primary\" component=\"span\">\n          <Trans>Balance:</Trans>\n        </Typography>\n        &nbsp;\n        <Typography color=\"text.primary\" component=\"span\" sx={{ marginRight: \"4px\" }}>\n          {balance ? parseTokenAmount(balance, token?.decimals).toFormat() : loading ? \"--\" : 0}\n        </Typography>\n        <MaxButton onClick={handleMax} />\n      </Grid>\n\n      <Grid container alignItems=\"center\" mt=\"12px\">\n        <Typography color=\"text.primary\" component=\"span\">\n          <Trans>Fee:</Trans>\n        </Typography>\n        &nbsp;\n        <Typography color=\"text.primary\" component=\"span\">\n          {token ? parseTokenAmount(token.transFee, token?.decimals).toFormat() : 0}\n        </Typography>\n      </Grid>\n\n      <Box mt=\"40px\">\n        <Identity onSubmit={handleTopUp}>\n          {({ submit }: CallbackProps) => (\n            <Button size=\"large\" fullWidth variant=\"contained\" onClick={submit} disabled={!!errorMessage}>\n              {errorMessage || <Trans>Submit</Trans>}\n            </Button>\n          )}\n        </Identity>\n      </Box>\n    </Modal>\n  );\n}\n","import { useCallback } from \"react\";\nimport { xtc } from \"@w2e/actor\";\nimport { Identity as CallIdentity } from \"types/global\";\nimport { Principal } from \"@dfinity/principal\";\nimport { resultFormat } from \"@w2e/utils\";\n\nexport interface XTCTopUpProps {\n  canisterId: string;\n  amount: bigint | number;\n  identity: CallIdentity;\n}\n\nexport function useXTCTopUp() {\n  return useCallback(async ({ canisterId, amount, identity }: XTCTopUpProps) => {\n    return resultFormat<bigint>(\n      await (await xtc(identity)).burn({ canister_id: Principal.fromText(canisterId), amount: BigInt(amount) }),\n    );\n  }, []);\n}\n","import { useState, useContext } from \"react\";\nimport { Button, Grid, TextField, Typography } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { parseTokenAmount, isValidAccount } from \"@w2e/utils\";\nimport BigNumber from \"bignumber.js\";\nimport { ICP_TOKEN_INFO } from \"constants/tokens\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { useErrorTip, useSuccessTip } from \"hooks/useTips\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { getLocaleMessage } from \"locales/services\";\nimport Identity, { CallbackProps, SubmitLoadingProps } from \"components/Identity/index\";\nimport { Theme } from \"@mui/material/styles\";\nimport { TokenInfo } from \"types/token\";\nimport { Identity as CallIdentity } from \"types/index\";\nimport { useAccountPrincipalString, useAccount } from \"store/auth/hooks\";\nimport WalletContext from \"components/Wallet/context\";\nimport { Modal, NumberTextField } from \"components/index\";\nimport { Principal } from \"@dfinity/principal\";\nimport { NFIDRequestTransfer } from \"utils/connector/NF_ID\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n  return {\n    warningText: {\n      color: theme.palette.warning.dark,\n    },\n  };\n});\n\nexport type Values = {\n  to: string;\n  amount: string;\n};\n\nexport default function NFIDTransferModal({\n  open,\n  onClose,\n  onTransferSuccess,\n  token,\n}: {\n  open: boolean;\n  onClose: () => void;\n  onTransferSuccess?: () => void;\n  token: TokenInfo;\n}) {\n  const classes = useStyles();\n  const account = useAccount();\n  const principalString = useAccountPrincipalString();\n  const [openErrorTip] = useErrorTip();\n  const [openSuccessTip] = useSuccessTip();\n\n  const { refreshTotalBalance, setRefreshTotalBalance } = useContext(WalletContext);\n\n  const initialValues = {\n    to: \"\",\n    amount: \"\",\n  };\n\n  const [values, setValues] = useState<Values>(initialValues);\n\n  const handleFieldChange = (value: string, field: string) => {\n    setValues({\n      ...values,\n      [field]: value,\n    });\n  };\n\n  const getErrorMessage = () => {\n    if (!values.to) return t`Enter transfer to`;\n\n    if (token.standardType.includes(\"DIP20\")) {\n      try {\n        Principal.fromText(values.to);\n      } catch (error) {\n        return t`Invalid principal ID`;\n      }\n    } else if (!isValidAccount(values.to)) return t`Invalid account ID`;\n\n    if (!values.amount) return t`Enter an amount`;\n    if (!new BigNumber(values.amount).minus(parseTokenAmount(token.transFee, token.decimals)).isGreaterThan(0))\n      return t`Must be greater than trans fee`;\n  };\n\n  const handleSubmit = async (identity: CallIdentity, { loading, closeLoading }: SubmitLoadingProps) => {\n    try {\n      if (loading) return;\n\n      const result = await NFIDRequestTransfer({\n        to: values.to,\n        amount: Number(new BigNumber(values.amount).toFixed(8, BigNumber.ROUND_DOWN)),\n      });\n\n      if (result.status === \"SUCCESS\") {\n        openSuccessTip(t`Transferred successfully`);\n        setValues(initialValues);\n        if (onTransferSuccess) onTransferSuccess();\n        if (token.canisterId.toString() === ICP_TOKEN_INFO.canisterId) {\n          if (setRefreshTotalBalance) setRefreshTotalBalance(!refreshTotalBalance);\n        }\n      }\n\n      if (result.status === \"REJECTED\" || result.status === \"ERROR\") {\n        openErrorTip(getLocaleMessage(result.message) ?? t`Failed to transfer`);\n      }\n\n      closeLoading();\n    } catch (error) {\n      console.error(error);\n      closeLoading();\n    }\n  };\n\n  const balanceActuallyToAccount = () => {\n    const amount = new BigNumber(values.amount ?? 0).minus(parseTokenAmount(token.transFee, token.decimals));\n    return amount.isGreaterThan(0) ? amount.toFormat() : 0;\n  };\n\n  const addressHelpText = () => {\n    if (\n      (token.standardType.includes(\"DIP20\") && principalString === values.to) ||\n      (!token.standardType.includes(\"DIP20\") && account === values.to)\n    ) {\n      return (\n        <span className={classes.warningText}>\n          <Trans>Be careful, you are transferring tokens to your own address!</Trans>\n        </span>\n      );\n    }\n  };\n\n  const errorMessage = getErrorMessage();\n\n  return (\n    <Modal open={open} onClose={onClose} title={t`NFID Transfer`}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField label={t`Token Symbol`} value={token.symbol} fullWidth disabled />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            label={t`To`}\n            value={values.to}\n            placeholder={token.standardType.includes(\"DIP20\") ? t`Enter the principal ID` : \"Enter the account ID\"}\n            onChange={({ target: { value } }) => handleFieldChange(value, \"to\")}\n            helperText={addressHelpText()}\n            fullWidth\n            autoComplete=\"To\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <NumberTextField\n            label={t`Amount`}\n            type=\"text\"\n            value={values.amount}\n            onChange={({ target: { value } }) => handleFieldChange(value, \"amount\")}\n            fullWidth\n            inputProps={{\n              autocomplete: \"new-password\",\n              form: {\n                autocomplete: \"off\",\n              },\n            }}\n            numericProps={{\n              allowNegative: false,\n              decimalScale: token.decimals,\n            }}\n            autoComplete=\"off\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography>\n            <Trans>Fee:</Trans> {parseTokenAmount(token?.transFee?.toString(), token.decimals).toFormat()}\n            &nbsp;{token.symbol}\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography>\n            <Trans>Actually:</Trans> {balanceActuallyToAccount()}\n            &nbsp;{token.symbol}\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography color=\"text.warning\">\n            <Trans>Please ensure that the receiving address supports this Token</Trans>\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Identity onSubmit={handleSubmit} fullScreenLoading>\n            {({ submit, loading }: CallbackProps) => (\n              <Button\n                variant=\"contained\"\n                fullWidth\n                color=\"primary\"\n                size=\"large\"\n                disabled={loading || !!errorMessage}\n                onClick={submit}\n              >\n                {errorMessage || (!loading ? (\n                  <Trans>Approve by NFID</Trans>\n                ) : (\n                  <CircularProgress size={26} color=\"inherit\" />\n                ))}\n              </Button>\n            )}\n          </Identity>\n        </Grid>\n      </Grid>\n    </Modal>\n  );\n}\n","import QRCode from \"qrcode.react\";\n\nexport interface QRCodeProps {\n  width?: number;\n  height?: number;\n  value: string;\n}\n\nexport default ({ value, ...props }: QRCodeProps) => {\n  return <QRCode value={value} {...props} />;\n};\n","import { useRef } from \"react\";\nimport { Grid, Typography } from \"@mui/material\";\nimport { t } from \"@lingui/macro\";\nimport QRCode from \"../qrcode\";\nimport Modal from \"../modal/index\";\nimport Copy, { CopyRef } from \"../Copy\";\n\nexport interface ReceiveModalProps {\n  open: boolean;\n  onClose: () => void;\n  address: string;\n}\n\nexport function ReceiveModal({ open, onClose, address }: ReceiveModalProps) {\n  const copy = useRef<CopyRef>(null);\n\n  const onConfirm = () => {\n    copy?.current?.copy();\n  };\n\n  return (\n    <Modal\n      title={t`Receive`}\n      open={open}\n      onClose={onClose}\n      showConfirm\n      onConfirm={onConfirm}\n      confirmText={t`Copy Address`}\n    >\n      <Grid container spacing={2}>\n        <Grid container item xs={12} justifyContent=\"center\">\n          <Grid item>\n            <QRCode value={address} />\n          </Grid>\n        </Grid>\n\n        <Grid container item xs={12} justifyContent=\"center\">\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              sx={{\n                wordBreak: \"break-all\",\n              }}\n            >\n              {address}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Copy ref={copy} content={address} hide />\n    </Modal>\n  );\n}\n","import { useState, useContext, useMemo, useEffect } from \"react\";\nimport { Typography, Box, useTheme } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { formatDollarAmount, parseTokenAmount, mockALinkAndOpen, BigNumber, principalToAccount } from \"@w2e/utils\";\nimport TransferModal from \"components/TokenTransfer/index\";\nimport { NoData, LoadingRow } from \"components/index\";\nimport { useTokenBalance } from \"hooks/token/useTokenBalance\";\nimport { ICP, Connector, NO_HIDDEN_TOKENS, INFO_URL } from \"constants/index\";\nimport { useAccount } from \"store/global/hooks\";\nimport { t } from \"@lingui/macro\";\nimport { Theme } from \"@mui/material/styles\";\nimport WalletContext from \"components/Wallet/context\";\nimport { useTokenInfo } from \"hooks/token/useTokenInfo\";\nimport { TokenInfo } from \"types/token\";\nimport { useAccountPrincipal, useConnectorType } from \"store/auth/hooks\";\nimport TokenStandardLabel from \"components/token/TokenStandardLabel\";\nimport { ckETH, ckBTC, WRAPPED_ICP, ICP_TOKEN_INFO, TOKEN_STANDARD, XTC, } from \"constants/tokens\";\nimport XTCTopUpModal from \"components/XTCTopup/index\";\nimport { useInfoToken } from \"hooks/info/useInfoTokens\";\nimport { useToken } from \"hooks/useCurrency\";\nimport NFIDTransfer from \"components/Wallet/NFIDTransfer\";\nimport { useHistory } from \"react-router-dom\";\nimport { isHouseUserTokenTransactions } from \"utils/index\";\nimport { TokenImage } from \"components/Image/Token\";\nimport { useSNSTokenRootId } from \"hooks/token/useSNSTokenRootId\";\nimport { ReceiveModal } from \"./Receive\";\n\nconst useStyles = makeStyles(() => ({\n  tokenAssets: {\n    fontSize: \"0.6rem\",\n  },\n  walletSymbol: {\n    cursor: \"pointer\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n}));\n\ninterface ActionButtonProps {\n  label: string;\n  onClick?: () => void;\n}\n\nfunction ActionButton({ label, onClick }: ActionButtonProps) {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        padding: \"7px 12px\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        background: \"#4F5A84\",\n        borderRadius: \"8px\",\n        cursor: \"pointer\",\n      }}\n      onClick={onClick}\n    >\n      <Typography color=\"text.primary\">{label}</Typography>\n    </Box>\n  );\n}\n\nexport const XTCTopUpIcon = () => {\n  return (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.9987 13.334C10.9442 13.334 13.332 10.9462 13.332 8.00065C13.332 5.05513 10.9442 2.66732 7.9987 2.66732C5.05318 2.66732 2.66536 5.05513 2.66536 8.00065C2.66536 10.9462 5.05318 13.334 7.9987 13.334ZM7.9987 14.6673C11.6806 14.6673 14.6654 11.6825 14.6654 8.00065C14.6654 4.31875 11.6806 1.33398 7.9987 1.33398C4.3168 1.33398 1.33203 4.31875 1.33203 8.00065C1.33203 11.6825 4.3168 14.6673 7.9987 14.6673Z\"\n        fill=\"#5669DC\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.9678 6.58579L6.55359 8L7.9678 9.41421L9.38201 8L7.9678 6.58579ZM4.66797 8L7.9678 11.2998L11.2676 8L7.9678 4.70017L4.66797 8Z\"\n        fill=\"#5669DC\"\n      />\n    </svg>\n  );\n};\n\ntype ckTOKEN = {\n  id: string;\n  mintPath: string;\n  dissolvePath: string;\n};\n\nconst ckTokens: ckTOKEN[] = [\n  { id: ckBTC.address, mintPath: \"/wallet/ckBTC?type=mint\", dissolvePath: \"/wallet/ckBTC?type=dissolve\" },\n  { id: ckETH.address, mintPath: \"/wallet/ckETH?type=mint\", dissolvePath: \"/wallet/ckETH?type=dissolve\" },\n];\n\nfunction ChainKeyTokenButtons({ ckToken }: { ckToken: ckTOKEN }) {\n  const history = useHistory();\n\n  const handleCKTokenMint = (path: string) => {\n    history.push(path);\n  };\n\n  const handleCKTokenDissolve = (path: string) => {\n    history.push(path);\n  };\n\n  return (\n    <>\n      <ActionButton label={t`Mint`} onClick={() => handleCKTokenMint(ckToken.mintPath)} />\n      <ActionButton label={t`Dissolve`} onClick={() => handleCKTokenDissolve(ckToken.dissolvePath)} />\n    </>\n  );\n}\n\nconst SWAP_BUTTON_EXCLUDE = [ICP_TOKEN_INFO.canisterId, WRAPPED_ICP.address];\n\nexport interface TokenListItemProps {\n  isHideSmallBalances: boolean;\n  searchValue: string;\n  canisterId: string;\n}\n\nexport function TokenListItem({ canisterId, isHideSmallBalances, searchValue }: TokenListItemProps) {\n  const classes = useStyles();\n  const account = useAccount();\n  const theme = useTheme() as Theme;\n  const principal = useAccountPrincipal();\n\n  const walletType = useConnectorType();\n\n  const history = useHistory();\n\n  const [, currency] = useToken(canisterId);\n\n  const infoToken = useInfoToken(currency?.address);\n\n  const tokenUSDPrice = useMemo(() => {\n    return infoToken?.priceUSD;\n  }, [infoToken]);\n\n  const { result: tokenInfo } = useTokenInfo(canisterId);\n  const [XTCTopUpShow, setXTCTopUpShow] = useState(false);\n\n  const [refreshInnerCounter, setRefreshInnerCounter] = useState<number>(0);\n\n  const [open, setOpen] = useState(false);\n  const [receiveOpen, setReceiveOpen] = useState(false);\n  const [NFIDTransferOpen, setNFIDTransferOpen] = useState(false);\n\n  const { refreshCounter, setTotalValue, setTotalUSDBeforeChange } = useContext(WalletContext);\n\n  const refreshNumber = useMemo(() => {\n    return refreshInnerCounter + refreshCounter;\n  }, [refreshInnerCounter, refreshCounter]);\n\n  const { result: tokenBalance } = useTokenBalance(canisterId, principal, refreshNumber);\n\n  useEffect(() => {\n    if (\n      tokenInfo &&\n      tokenInfo.decimals !== undefined &&\n      tokenInfo.transFee !== undefined &&\n      tokenBalance &&\n      infoToken\n    ) {\n      setTotalValue(\n        tokenInfo.canisterId,\n        parseTokenAmount(tokenBalance, tokenInfo.decimals).multipliedBy(infoToken.priceUSD),\n      );\n\n      const usdBeforeChange = new BigNumber(infoToken.priceUSD).div(\n        new BigNumber(infoToken.priceUSDChange).dividedBy(100).plus(1),\n      );\n\n      setTotalUSDBeforeChange(\n        tokenInfo.canisterId,\n        parseTokenAmount(tokenBalance, tokenInfo.decimals).multipliedBy(usdBeforeChange),\n      );\n    }\n  }, [tokenBalance, infoToken, tokenInfo]);\n\n  const handleCloseModal = async () => {\n    setOpen(false);\n  };\n\n  const handleTransferSuccess = () => {\n    setRefreshInnerCounter(refreshInnerCounter + 1);\n    handleCloseModal();\n    setNFIDTransferOpen(false);\n  };\n\n  const handleTopUpSuccess = () => {\n    setRefreshInnerCounter(refreshInnerCounter + 1);\n  };\n\n  const handleTransfer = async () => {\n    setOpen(true);\n  };\n\n  const root_canister_id = useSNSTokenRootId(canisterId);\n\n  const handleToTransactions = () => {\n    if (!tokenInfo || !principal) return;\n\n    const { canisterId, standardType, symbol } = tokenInfo;\n\n    if (symbol === ICP_TOKEN_INFO.symbol) {\n      mockALinkAndOpen(`https://dashboard.internetcomputer.org/account//${account}`, \"TOKEN_TRANSACTIONS\");\n    } else if (root_canister_id) {\n      mockALinkAndOpen(\n        `https://dashboard.internetcomputer.org/sns/${root_canister_id}/account/${principal.toString()}`,\n        \"TOKEN_TRANSACTIONS\",\n      );\n    } else if (tokenInfo.standardType === TOKEN_STANDARD.ICRC1 || tokenInfo.standardType === TOKEN_STANDARD.ICRC2) {\n      const url = isHouseUserTokenTransactions(tokenInfo.canisterId, principal?.toString());\n      mockALinkAndOpen(url, \"TOKEN_TRANSACTIONS\");\n    } else {\n      mockALinkAndOpen(\n        `${INFO_URL}/token/transactions/${canisterId}/${principal?.toString()}?standard=${standardType}`,\n        \"TOKEN_TRANSACTIONS\",\n      );\n    }\n  };\n\n  const handleLoadToDetail = (tokenInfo: TokenInfo | undefined) => {\n    if (tokenInfo && tokenInfo.symbol !== ICP_TOKEN_INFO.symbol) {\n      mockALinkAndOpen(\n        `${INFO_URL}/token/details/${tokenInfo?.canisterId}?standard=${tokenInfo?.standardType}`,\n        \"TOKEN_DETAILs\",\n      );\n    }\n  };\n\n  const handleXTCTopUp = () => {\n    setXTCTopUpShow(true);\n  };\n\n  const handleWrappedICP = (value: \"wrap\" | \"unwrap\") => {\n    if (value === \"wrap\") {\n      history.push(\"/swap/v2/wrap?input=icp\");\n      return;\n    }\n\n    history.push(\"/swap/v2/wrap?input=wicp\");\n  };\n\n  const isHidden = useMemo(() => {\n    const hiddenBySmallBalance = isHideSmallBalances && !!tokenBalance && !tokenBalance?.isGreaterThan(0);\n\n    const hiddenBySearchValue = searchValue\n      ? !tokenInfo?.symbol\n        ? true\n        : !tokenInfo?.symbol.toLowerCase().includes(searchValue.toLowerCase())\n      : false;\n\n    if (NO_HIDDEN_TOKENS.includes(canisterId)) return false;\n\n    return hiddenBySmallBalance || hiddenBySearchValue;\n  }, [isHideSmallBalances, tokenBalance, canisterId, searchValue, tokenInfo]);\n\n  const handleToSwap = () => {\n    history.push(`/swap?input=${canisterId}&output=${ICP.address}`);\n  };\n\n  const handleReceive = () => {\n    setReceiveOpen(true);\n  };\n\n  return (\n    <Box\n      sx={{\n        borderRadius: \"12px\",\n        background: theme.palette.background.level4,\n        padding: \"20px\",\n        maxWidth: \"100%\",\n        overflow: \"hidden\",\n        ...(isHidden ? { display: \"none\" } : {}),\n        \"@media(max-width: 640px)\": {\n          padding: \"10px\",\n        },\n      }}\n    >\n      <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <Box sx={{ display: \"flex\", gap: \"0 10px\" }}>\n          <TokenImage size=\"40px\" logo={tokenInfo?.logo} tokenId={tokenInfo?.canisterId} />\n          <Box>\n            <Typography\n              color=\"textPrimary\"\n              className={tokenInfo?.symbol !== ICP_TOKEN_INFO.symbol ? classes.walletSymbol : \"\"}\n              onClick={() => handleLoadToDetail(tokenInfo)}\n              fontWeight={500}\n            >\n              {tokenInfo?.symbol}\n            </Typography>\n            <Typography sx={{ fontSize: \"12px\" }}>{tokenInfo?.name}</Typography>\n          </Box>\n        </Box>\n        <TokenStandardLabel standard={tokenInfo?.standardType} />\n      </Box>\n\n      <Box sx={{ display: \"flex\", margin: \"12px 0 0 0\" }}>\n        <Box sx={{ width: \"50%\" }}>\n          <Typography fontSize=\"12px\">Balance</Typography>\n          <Typography color=\"textPrimary\" sx={{ margin: \"4px 0 0 0\" }}>\n            {parseTokenAmount(tokenBalance, tokenInfo?.decimals).toFormat()}\n          </Typography>\n          <Typography className={classes.tokenAssets}>\n            {tokenUSDPrice && tokenBalance\n              ? `≈\n              ${formatDollarAmount(\n                parseTokenAmount(tokenBalance, tokenInfo?.decimals)\n                  .multipliedBy(tokenUSDPrice)\n                  .toString(),\n                4,\n              )}`\n              : \"--\"}\n          </Typography>\n        </Box>\n        <Box sx={{ width: \"50%\" }}>\n          <Typography fontSize=\"12px\">Price</Typography>\n          <Typography color=\"textPrimary\" sx={{ margin: \"4px 0 0 0\" }}>\n            {tokenUSDPrice ? formatDollarAmount(tokenUSDPrice) : \"--\"}\n          </Typography>\n        </Box>\n      </Box>\n\n      <Box\n        sx={{ margin: \"24px 0 0 0\", display: \"flex\", justifyContent: \"flex-end\", gap: \"10px 10px\", flexWrap: \"wrap\" }}\n      >\n        {SWAP_BUTTON_EXCLUDE.includes(canisterId) ? null : <ActionButton label=\"Swap\" onClick={handleToSwap} />}\n\n        <ActionButton label=\"Send\" onClick={handleTransfer} />\n        <ActionButton label=\"Receive\" onClick={handleReceive} />\n        <ActionButton label=\"Transactions\" onClick={handleToTransactions} />\n\n        {canisterId === ICP.address && walletType === Connector.NFID ? (\n          <ActionButton label={t`NFID Transfer`} onClick={() => setNFIDTransferOpen(true)} />\n        ) : null}\n\n        {tokenInfo?.canisterId === XTC.address ? <ActionButton label={t`Top-up`} onClick={handleXTCTopUp} /> : null}\n\n        {tokenInfo?.canisterId === WRAPPED_ICP.address ? (\n          <>\n            <ActionButton label={t`Unwrap`} onClick={() => handleWrappedICP(\"unwrap\")} />\n            <ActionButton label={t`Wrap`} onClick={() => handleWrappedICP(\"wrap\")} />\n          </>\n        ) : null}\n\n        {ckTokens\n          .filter((ele) => ele.id === tokenInfo?.canisterId)\n          .map((ele) => (\n            <ChainKeyTokenButtons key={ele.id} ckToken={ele} />\n          ))}\n      </Box>\n\n      {open && !!tokenInfo ? (\n        <TransferModal\n          open={open}\n          onClose={handleCloseModal}\n          token={tokenInfo}\n          onTransferSuccess={handleTransferSuccess}\n        />\n      ) : null}\n\n      {NFIDTransferOpen && !!tokenInfo ? (\n        <NFIDTransfer\n          open={NFIDTransferOpen}\n          onClose={() => setNFIDTransferOpen(false)}\n          token={tokenInfo}\n          onTransferSuccess={handleTransferSuccess}\n        />\n      ) : null}\n\n      {XTCTopUpShow ? (\n        <XTCTopUpModal open={XTCTopUpShow} onClose={() => setXTCTopUpShow(false)} onTopUpSuccess={handleTopUpSuccess} />\n      ) : null}\n\n      {receiveOpen ? (\n        <ReceiveModal\n          open={receiveOpen}\n          onClose={() => setReceiveOpen(false)}\n          address={\n            !principal\n              ? \"\"\n              : tokenInfo?.standardType === TOKEN_STANDARD.EXT || tokenInfo?.canisterId === ICP.address\n                ? principalToAccount(principal.toString())\n                : principal.toString()\n          }\n        />\n      ) : null}\n    </Box>\n  );\n}\n\nexport interface TokenListProps {\n  list: string[];\n  loading?: boolean;\n  isHideSmallBalances: boolean;\n  searchValue: string;\n}\n\nexport default function TokenList({ list, loading, isHideSmallBalances, searchValue }: TokenListProps) {\n  return (\n    <Box\n      sx={{\n        width: \"100%\",\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 1fr 1fr\",\n        gap: \"20px\",\n        \"@media(max-width: 1088px)\": {\n          gridTemplateColumns: \"1fr 1fr\",\n          gap: \"12px 12px\",\n        },\n        \"@media(max-width: 640px)\": {\n          gridTemplateColumns: \"1fr\",\n          gap: \"12px 0\",\n        },\n      }}\n    >\n      {list.map((canisterId) => {\n        return (\n          <TokenListItem\n            key={canisterId}\n            canisterId={canisterId}\n            isHideSmallBalances={isHideSmallBalances}\n            searchValue={searchValue}\n          />\n        );\n      })}\n\n      {list.length === 0 && !loading ? <NoData /> : null}\n\n      {loading ? (\n        <LoadingRow>\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n          <div />\n        </LoadingRow>\n      ) : null}\n    </Box>\n  );\n}\n","var _rect, _rect2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAdd(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 9,\n    y: 15,\n    width: 14,\n    height: 2,\n    rx: 1,\n    fill: \"white\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 17,\n    y: 9,\n    width: 14,\n    height: 2,\n    rx: 1,\n    transform: \"rotate(90 17 9)\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAdd);\nexport default __webpack_public_path__ + \"static/media/add.1275c2ddf891660b4f992c81a6422aa9.svg\";\nexport { ForwardRef as ReactComponent };","import { useState, useMemo } from \"react\";\nimport { Button, Grid, Box, Typography, InputAdornment, useTheme, useMediaQuery } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useWalletCatchTokenIds, useSaveCacheTokenCallback, useDeleteCacheTokenCallback } from \"store/wallet/hooks\";\nimport { IconSearch } from \"@tabler/icons\";\nimport HorizontalRuleIcon from \"@mui/icons-material/HorizontalRule\";\nimport { Trans, t } from \"@lingui/macro\";\nimport { useImportedTokens } from \"store/token/cache/hooks\";\nimport { Theme } from \"@mui/material/styles\";\nimport { useTokenInfo } from \"hooks/token/useTokenInfo\";\nimport TokenStandardLabel from \"components/token/TokenStandardLabel\";\nimport ImportToken from \"components/Wallet/ImportToken\";\nimport { NoData, TextButton, Modal, FilledTextField } from \"components/index\";\nimport { useGlobalTokenList } from \"store/global/hooks\";\nimport { DISPLAY_IN_WALLET_FOREVER } from \"constants/wallet\";\nimport { TokenImage } from \"@w2e/ui\";\n\nexport function TokenItem({ canisterId }: { canisterId: string }) {\n  const theme = useTheme() as Theme;\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const walletCatchTokenIds = useWalletCatchTokenIds() ?? [];\n  const addToken = useSaveCacheTokenCallback();\n  const deleteToken = useDeleteCacheTokenCallback();\n\n  const handleAddToken = (canisterId: string) => {\n    addToken([canisterId]);\n  };\n\n  const handleDeleteToken = (canisterId: string) => {\n    deleteToken([canisterId]);\n  };\n\n  const hasBeenAdded = (canisterId: string) => {\n    return !!walletCatchTokenIds.find((tokenId) => tokenId === canisterId);\n  };\n\n  const { result: tokenInfo } = useTokenInfo(canisterId);\n\n  return (\n    <Box\n      sx={{\n        display: \"grid\",\n        gridTemplateColumns: \"190px 1fr 80px\",\n        gap: \"0 20px\",\n        height: \"73px\",\n        alignItems: \"center\",\n        borderTop: \"1px solid rgba(189, 200, 240, 0.082)\",\n      }}\n    >\n      <Grid container alignItems=\"center\">\n        <TokenImage logo={tokenInfo?.logo} size=\"32px\" />\n\n        <Grid ml={1} item xs>\n          <Grid container alignItems=\"center\" mr=\"5px\">\n            <Grid\n              item\n              xs\n              sx={{\n                width: \"80px\",\n                overflow: \"hidden\",\n              }}\n            >\n              <Typography>{tokenInfo?.symbol}</Typography>\n              <Typography\n                fontSize={12}\n                color=\"textSecondary\"\n                sx={{\n                  width: \"100%\",\n                  overflow: \"hidden\",\n                  textOverflow: \"ellipsis\",\n                  whiteSpace: \"nowrap\",\n                }}\n              >\n                {tokenInfo?.name}\n              </Typography>\n            </Grid>\n\n            <TokenStandardLabel standard={tokenInfo?.standardType} />\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Typography>{matchDownSM ? \"\" : tokenInfo?.canisterId}</Typography>\n\n      <>\n        {DISPLAY_IN_WALLET_FOREVER.includes(canisterId) ? null : hasBeenAdded(canisterId) ? (\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            startIcon={<HorizontalRuleIcon fontSize=\"small\" />}\n            onClick={() => handleDeleteToken(canisterId)}\n          >\n            <Trans>Delete</Trans>\n          </Button>\n        ) : (\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            startIcon={<AddIcon fontSize=\"small\" />}\n            onClick={() => handleAddToken(canisterId)}\n          >\n            <Trans>Add</Trans>\n          </Button>\n        )}\n      </>\n    </Box>\n  );\n}\n\nexport default function AddTokenModal({ open, onClose }: { open: boolean; onClose: () => void }) {\n  const theme = useTheme() as Theme;\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [queryValue, setQueryValue] = useState(\"\");\n  const [importTokenShow, setImportTokenShow] = useState(false);\n\n  const globalTokenList = useGlobalTokenList();\n  const importedTokens = useImportedTokens();\n\n  const handleSearch = async (values: string) => {\n    setQueryValue(values);\n  };\n\n  const tokens = useMemo(() => {\n    const iTokens = Object.keys(importedTokens ?? [])\n      .filter((canisterId) => !globalTokenList.find((token) => token.canisterId === canisterId))\n      .map((canisterId) => {\n        const token = importedTokens[canisterId];\n\n        return {\n          canisterId,\n          name: token.name,\n          symbol: token.symbol,\n        };\n      });\n\n    const _tokens = globalTokenList\n      .filter((token) => !token.configs.find((config) => config.name === \"WALLET\" && config.value === \"true\"))\n      .map((token) => ({\n        canisterId: token.canisterId,\n        name: token.name,\n        symbol: token.symbol,\n      }));\n\n    const tokens = [...iTokens, ..._tokens];\n\n    if (queryValue) {\n      return tokens.filter(\n        (token) =>\n          token.name.toLowerCase().includes(queryValue.toLowerCase()) ||\n          token.symbol.toLowerCase().includes(queryValue.toLowerCase()),\n      );\n    }\n\n    return tokens;\n  }, [importedTokens, globalTokenList, queryValue]);\n\n  return (\n    <>\n      <Modal\n        open={open}\n        onClose={onClose}\n        title={t`Add Tokens`}\n        dialogProps={{\n          sx: {\n            \"& .MuiPaper-root\": {\n              width: \"700px\",\n              maxWith: \"700px\",\n            },\n          },\n        }}\n      >\n        <Box>\n          <FilledTextField\n            contained\n            background={theme.palette.background.level1}\n            borderRadius=\"12px\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <IconSearch stroke={1.5} size=\"1rem\" />\n                </InputAdornment>\n              ),\n            }}\n            fullWidth\n            size={matchDownSM ? \"small\" : undefined}\n            placeholder={t`Search token`}\n            onChange={handleSearch}\n          />\n        </Box>\n\n        <Box mt=\"16px\">\n          <Box\n            sx={{\n              display: \"grid\",\n              gridTemplateColumns: \"190px 1fr 80px\",\n              gap: \"0 20px\",\n              height: \"57px\",\n              alignItems: \"center\",\n            }}\n          >\n            <Typography>\n              <Trans>Token</Trans>\n            </Typography>\n            <Typography sx={{ \"@media (max-width: 540px)\": { display: \"none\" } }}>\n              <Trans>Canister ID</Trans>\n            </Typography>\n            <Typography>&nbsp;</Typography>\n          </Box>\n\n          <Box\n            sx={{\n              maxHeight: \"260px\",\n              overflow: \"auto\",\n              \"@media (max-width: 540px)\": { maxHeight: \"290px\" },\n            }}\n          >\n            {tokens.map((token, index) => (\n              <TokenItem key={`${token.canisterId}-${index}}`} canisterId={token.canisterId} />\n            ))}\n          </Box>\n\n          {tokens.length === 0 ? (\n            <Box sx={{ borderTop: \"1px solid rgba(189, 200, 240, 0.082)\" }}>\n              <NoData />\n            </Box>\n          ) : null}\n        </Box>\n\n        <Grid\n          container\n          justifyContent=\"center\"\n          sx={{\n            paddingTop: \"20px\",\n            borderTop: \"1px solid rgba(81, 81, 81, 1)\",\n            borderColor: \"rgba(189, 200, 240, 0.082)\",\n          }}\n        >\n          <TextButton onClick={() => setImportTokenShow(true)}>\n            <Trans>Import Token</Trans>\n          </TextButton>\n        </Grid>\n      </Modal>\n\n      {importTokenShow ? (\n        <ImportToken\n          open={importTokenShow}\n          onClose={() => setImportTokenShow(false)}\n          onImportSuccessfully={() => onClose()}\n        />\n      ) : null}\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport { ReactComponent as AddIcon } from \"assets/icons/add.svg\";\nimport AddTokenModal from \"./modal\";\n\nexport default function AddToken() {\n  const [modalVisible, setModalVisible] = useState(false);\n\n  return (\n    <>\n      <AddIcon style={{ cursor: \"pointer\" }} onClick={() => setModalVisible(true)} />\n      {modalVisible ? <AddTokenModal open={modalVisible} onClose={() => setModalVisible(false)} /> : null}\n    </>\n  );\n}\n","import { Typography, Box } from \"@mui/material\";\nimport { t } from \"@lingui/macro\";\n\ntype Item = {\n  name: string;\n  pageName: \"token\";\n};\n\nconst DISPLAY_ITEMS: Item[] = [\n  {\n    name: t`Token`,\n    pageName: \"token\",\n  }\n];\n\nexport default function WalletPageToggle() {\n\n\n  return (\n    <Box sx={{ display: \"flex\", gap: \"0 24px\", alignItems: \"center\" }}>\n      {DISPLAY_ITEMS.map((item) => (\n        <Typography\n          key={item.pageName}\n          variant=\"h3\"\n          color=\"textPrimary\"\n          onClick={() => (item)}\n          sx={{ cursor: \"pointer\" }}\n        >\n          {item.name}\n        </Typography>\n      ))}\n    </Box>\n  );\n}\n","import { Typography, Box, Checkbox, useMediaQuery, useTheme } from \"@mui/material\";\nimport AddToken from \"components/Wallet/AddToken\";\nimport WalletPageToggle from \"components/Wallet/PageToggle\";\nimport { Trans } from \"@lingui/macro\";\n\ninterface HideSmallBalanceProps {\n  onHideSmallBalances: (checked: boolean) => void;\n  isHideSmallBalances: boolean;\n}\n\nfunction HideSmallBalance({ isHideSmallBalances, onHideSmallBalances }: HideSmallBalanceProps) {\n  return (\n    <Box sx={{ display: \"flex\", gap: \"0 5px\", alignItems: \"center\" }}>\n      <Checkbox\n        checked={isHideSmallBalances}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => onHideSmallBalances(event.target.checked)}\n      />\n      <Typography sx={{ cursor: \"pointer\" }} onClick={() => onHideSmallBalances(!isHideSmallBalances)}>\n        <Trans>Hide Zero Balance</Trans>\n      </Typography>\n    </Box>\n  );\n}\n\nexport interface TokenHeaderProps {\n  onHideSmallBalances: (checked: boolean) => void;\n  onSearchValue: (value: string) => void;\n  isHideSmallBalances: boolean;\n}\n\nexport default function TokenListHeader({ onHideSmallBalances, isHideSmallBalances }: TokenHeaderProps) {\n  const theme = useTheme();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  return (\n    <Box>\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <WalletPageToggle />\n\n        <Box sx={{ display: \"flex\", alignItems: \"center\", gap: \"0 10px\" }}>\n          {!matchDownSM ? (\n            <HideSmallBalance onHideSmallBalances={onHideSmallBalances} isHideSmallBalances={isHideSmallBalances} />\n          ) : null}\n\n          <AddToken />\n        </Box>\n      </Box>\n      {matchDownSM ? (\n        <Box sx={{ margin: \"10px 0 0 0\" }}>\n          <HideSmallBalance onHideSmallBalances={onHideSmallBalances} isHideSmallBalances={isHideSmallBalances} />\n        </Box>\n      ) : null}\n    </Box>\n  );\n}\n","import { useState, useMemo } from \"react\";\nimport { Box } from \"@mui/material\";\nimport TokenListTable from \"components/Wallet/TokenListTable\";\nimport TokenListHeader from \"components/Wallet/TokenListHeader\";\nimport {\n  ICP_METADATA,\n  // WRAPPED_ICP_METADATA,\n  W2E_METADATA,\n  WPL_METADATA,\n  WPR_METADATA,\n  WG_METADATA,\n  WM_METADATA,\n  WOX_METADATA,\n  EW_METADATA\n} from \"constants/tokens\";\nimport { NETWORK, network } from \"constants/server\";\nimport { useWalletCatchTokenIds, useUpdateHideSmallBalanceManager } from \"store/wallet/hooks\";\nimport { DISPLAY_IN_WALLET_FOREVER } from \"constants/wallet\";\nimport { useGlobalTokenList } from \"store/global/hooks\";\n\nexport default function WalletTokenList() {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [isHideSmallBalances, setIsHideSmallBalances] = useUpdateHideSmallBalanceManager();\n  const walletCacheTokenIds = useWalletCatchTokenIds();\n\n  const globalTokenList = useGlobalTokenList();\n\n  const tokens = useMemo(() => {\n    let tokenIds = [\n      ICP_METADATA.canisterId.toString(),\n      // WRAPPED_ICP_METADATA.canisterId.toString(),\n      W2E_METADATA.canisterId.toString(),\n      WPL_METADATA.canisterId.toString(),\n      WPR_METADATA.canisterId.toString(),\n      WG_METADATA.canisterId.toString(),\n      WM_METADATA.canisterId.toString(),\n      WOX_METADATA.canisterId.toString(),\n      EW_METADATA.canisterId.toString(),\n    ];\n\n    if (network === NETWORK.IC) {\n      tokenIds = [\n        ...tokenIds,\n        ...globalTokenList\n          .filter((token) => !!token.configs.find((config) => config.name === \"WALLET\" && config.value === \"true\"))\n          .sort((a, b) => {\n            if (a.rank < b.rank) return -1;\n            if (a.rank > b.rank) return 1;\n            return 0;\n          })\n          .map((token) => token.canisterId),\n      ];\n    }\n\n    return [...new Set([...tokenIds, ...walletCacheTokenIds.filter((id) => !DISPLAY_IN_WALLET_FOREVER.includes(id))])];\n  }, [walletCacheTokenIds, globalTokenList]);\n\n  const handleSearchValue = (value: string) => {\n    setSearchValue(value);\n  };\n\n  const hideSmallBalances = (hideOrNot: boolean) => {\n    setIsHideSmallBalances(hideOrNot);\n  };\n\n  return (\n    <>\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: \"24px 0\", overflow: \"auto hidden\" }}>\n        <TokenListHeader\n          onHideSmallBalances={hideSmallBalances}\n          onSearchValue={handleSearchValue}\n          isHideSmallBalances={isHideSmallBalances}\n        />\n\n        <TokenListTable isHideSmallBalances={isHideSmallBalances} list={tokens} searchValue={searchValue} />\n      </Box>\n    </>\n  );\n}\n","import { useMemo, useState } from \"react\";\nimport BigNumber from \"bignumber.js\";\nimport { Box } from \"@mui/material\";\nimport WalletAccount from \"components/Wallet/WalletAccount\";\nimport TokenList from \"components/Wallet/TokenList\";\n// import NFTList from \"components/Wallet/NFTList\";\nimport WalletContext, { TokenBalance, Page } from \"components/Wallet/context\";\nimport { useConnectorStateConnected } from \"store/auth/hooks\";\nimport ConnectWallet from \"components/ConnectWallet\";\n\nexport default function Wallet() {\n  const [refreshCounter, setRefreshCounter] = useState<number>(0);\n  const [refreshTotalBalance, setRefreshTotalBalance] = useState(false);\n  const [totalValue, setTotalValue] = useState<TokenBalance>({} as TokenBalance);\n  const [totalUSDBeforeChange, setTotalUSDBeforeChange] = useState<TokenBalance>({} as TokenBalance);\n  const [transferTo, setTransferTo] = useState<string>(\"\");\n  const [transferAmount, setTransferAmount] = useState<BigNumber>(new BigNumber(0));\n  const [page, setPage] = useState<Page>(\"token\");\n\n  const walletIsConnected = useConnectorStateConnected();\n\n  const handleTotalValueChange = (tokenId: string, value: BigNumber) => {\n    setTotalValue((prevState) => ({ ...prevState, [tokenId]: value }));\n  };\n\n  const handleTotalUSDChange = (tokenId: string, value: BigNumber) => {\n    setTotalUSDBeforeChange((prevState) => ({ ...prevState, [tokenId]: value }));\n  };\n\n  const allTokenTotalValue = useMemo(() => {\n    return Object.values(totalValue).reduce((prev, curr) => prev.plus(curr), new BigNumber(0));\n  }, [totalValue]);\n\n  const allTokenTotalUSDChange = useMemo(() => {\n    return Object.values(totalUSDBeforeChange).reduce((prev, curr) => prev.plus(curr), new BigNumber(0));\n  }, [totalUSDBeforeChange]);\n\n  return walletIsConnected ? (\n    <WalletContext.Provider\n      value={{\n        refreshTotalBalance,\n        setRefreshTotalBalance,\n        refreshCounter,\n        setRefreshCounter,\n        totalValue: allTokenTotalValue,\n        setTotalValue: handleTotalValueChange,\n        totalUSDBeforeChange: allTokenTotalUSDChange,\n        setTotalUSDBeforeChange: handleTotalUSDChange,\n        transferTo,\n        setTransferTo,\n        transferAmount,\n        setTransferAmount,\n        page,\n        setPage,\n      }}\n    >\n      <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Box sx={{ width: \"100%\", maxWidth: \"1400px\" }}>\n          <WalletAccount />\n          <Box sx={{ margin: \"30px 0 0 0\" }}>\n            <Box sx={{ display: page === \"token\" ? \"block\" : \"none\" }}>\n              <TokenList />\n            </Box>\n            {/* <Box sx={{ display: page === \"nft\" ? \"block\" : \"none\" }}>\n              <NFTList />\n            </Box> */}\n          </Box>\n        </Box>\n      </Box>\n    </WalletContext.Provider>\n  ) : (\n    <ConnectWallet />\n  );\n}\n","export const ICP_ADDRESS_LENGTH = 64;\n\nexport function isValidAccount(address: string): boolean {\n  return (\n    /^[0-9a-fA-F]+$/.test(address) && ICP_ADDRESS_LENGTH === address.length\n  );\n}\n"],"names":["ConnectWallet","walletManager","useWalletConnectorManager","_jsx","Grid","container","justifyContent","children","Box","sx","maxWidth","width","MainCard","level","_jsxs","alignItems","flexDirection","height","NoData","Typography","color","Trans","id","Button","variant","onClick","marginTop","size","MaxButton","props","_props$sx","theme","useTheme","padding","cursor","borderRadius","backgroundColor","colors","secondaryMain","fontSize","_g","_defs","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgRefresh","_ref","svgRef","title","titleId","viewBox","fill","xmlns","ref","clipPath","d","createContext","WalletAccount","icpPrice","useICPPrice","openSuccessTip","useSuccessTip","refreshTotalBalance","setRefreshTotalBalance","refreshCounter","setRefreshCounter","totalValue","totalUSDBeforeChange","useContext","WalletContext","useTotalICPValue","useMemo","dividedBy","usdChange","isEqualTo","concat","minus","multipliedBy","toFixed","usdChangeType","includes","USDChangeColor","display","borderBottom","gap","RefreshIcon","style","handleRefreshBalance","margin","component","fontWeight","formatDollarAmount","toString","toFormat","useStyles","makeStyles","warningText","palette","warning","dark","usePrincipalStandard","tokenId","standard","ICP","address","useAccountStandard","TransferModal","_token$transFee","open","onClose","onTransferSuccess","token","transferTo","principalFromState","React","classes","account","useAccount","principalString","useAccountPrincipalString","principal","useAccountPrincipal","openErrorTip","useErrorTip","result","balance","useTokenBalance","canisterId","tokenUSDPrice","useUSDPriceById","initialValues","to","weight","amount","values","setValues","useState","handleFieldChange","value","field","actualTransferAmount","_values$weight2","_values$amount3","BigNumber","isGreaterThan","parseTokenAmount","transFee","decimals","errorMessage","getErrorMessage","_values$amount","i18n","_","standardType","Principal","fromText","error","isValidAccount","isValidPrincipal","Modal","FilledTextField","symbol","fullWidth","placeholder","onChange","helperText","addressHelpText","className","autoComplete","multiline","NumberFilledTextField","numericProps","allowNegative","decimalScale","InputProps","endAdornment","InputAdornment","position","toSignificantWithGroupSeparator","0","marginLeft","event","stopPropagation","Identity","onSubmit","async","identity","_ref2","loading","closeLoading","_values$weight","_values$amount2","isLessThanOrEqualTo","status","message","tokenTransfer","formatTokenAmount","from","fee","_getLocaleMessage","W2E","getLocaleMessage","console","fullScreenLoading","_ref3","submit","disabled","CircularProgress","XTCTopUp","onTopUpSuccess","useTokenInfo","XTC","defaultValues","openTip","closeTip","useTips","onFieldChange","prevState","useCallback","resultFormat","xtc","burn","canister_id","BigInt","Number","label","mt","inputComponent","TextFieldNumberComponent","inputProps","maxLength","marginRight","handleMax","toNumber","loadingTipKey","1","TIP_LOADING","numberToString","ResultStatus","OK","TIP_SUCCESS","TIP_ERROR","NFIDTransferModal","spacing","item","xs","TextField","NumberTextField","type","_ref4","autocomplete","form","balanceActuallyToAccount","NFIDRequestTransfer","ROUND_DOWN","ICP_TOKEN_INFO","_ref5","QRCode","ReceiveModal","copy","useRef","showConfirm","onConfirm","_copy$current","current","confirmText","wordBreak","Copy","content","hide","tokenAssets","walletSymbol","textDecoration","ActionButton","background","ckTokens","ckBTC","mintPath","dissolvePath","ckETH","ChainKeyTokenButtons","ckToken","history","useHistory","_Fragment","handleCKTokenMint","path","push","handleCKTokenDissolve","SWAP_BUTTON_EXCLUDE","WRAPPED_ICP","TokenListItem","isHideSmallBalances","searchValue","walletType","useConnectorType","currency","useToken","infoToken","useInfoToken","priceUSD","tokenInfo","XTCTopUpShow","setXTCTopUpShow","refreshInnerCounter","setRefreshInnerCounter","setOpen","receiveOpen","setReceiveOpen","NFIDTransferOpen","setNFIDTransferOpen","setTotalValue","setTotalUSDBeforeChange","refreshNumber","tokenBalance","useEffect","undefined","usdBeforeChange","div","priceUSDChange","plus","handleCloseModal","handleTransferSuccess","root_canister_id","useSNSTokenRootId","handleWrappedICP","isHidden","hiddenBySmallBalance","hiddenBySearchValue","toLowerCase","NO_HIDDEN_TOKENS","level4","overflow","TokenImage","logo","mockALinkAndOpen","INFO_URL","handleLoadToDetail","name","TokenStandardLabel","flexWrap","handleToSwap","handleReceive","handleToTransactions","TOKEN_STANDARD","ICRC1","ICRC2","url","isHouseUserTokenTransactions","Connector","NFID","handleXTCTopUp","filter","ele","map","NFIDTransfer","XTCTopUpModal","handleTopUpSuccess","EXT","principalToAccount","TokenList","list","gridTemplateColumns","LoadingRow","_rect","_rect2","SvgAdd","x","y","rx","transform","TokenItem","_useWalletCatchTokenI","matchDownSM","useMediaQuery","breakpoints","down","walletCatchTokenIds","useWalletCatchTokenIds","addToken","useSaveCacheTokenCallback","deleteToken","useDeleteCacheTokenCallback","borderTop","ml","mr","textOverflow","whiteSpace","DISPLAY_IN_WALLET_FOREVER","find","hasBeenAdded","startIcon","HorizontalRuleIcon","handleDeleteToken","AddIcon","handleAddToken","AddTokenModal","queryValue","setQueryValue","importTokenShow","setImportTokenShow","globalTokenList","useGlobalTokenList","importedTokens","useImportedTokens","tokens","keys","configs","config","dialogProps","maxWith","contained","level1","startAdornment","IconSearch","stroke","maxHeight","index","paddingTop","borderColor","TextButton","ImportToken","onImportSuccessfully","AddToken","modalVisible","setModalVisible","DISPLAY_ITEMS","pageName","WalletPageToggle","HideSmallBalance","onHideSmallBalances","Checkbox","checked","TokenListHeader","WalletTokenList","setSearchValue","setIsHideSmallBalances","useUpdateHideSmallBalanceManager","walletCacheTokenIds","tokenIds","ICP_METADATA","W2E_METADATA","WPL_METADATA","WPR_METADATA","WG_METADATA","WM_METADATA","WOX_METADATA","EW_METADATA","network","NETWORK","IC","sort","a","b","rank","Set","hideOrNot","onSearchValue","TokenListTable","Wallet","setTransferTo","transferAmount","setTransferAmount","page","setPage","walletIsConnected","useConnectorStateConnected","allTokenTotalValue","reduce","prev","curr","allTokenTotalUSDChange","Provider","handleTotalValueChange","handleTotalUSDChange","ICP_ADDRESS_LENGTH","test"],"sourceRoot":""}